var searchIndex = JSON.parse('{\
"maturin":{"doc":"程序入口为 mod arch/riscv/mod.rs 中的函数 entry ( …","t":"DALLLAAAFFOOFAFALALLAALLAOOLLLFFLAFFFFLAAFAALLLAHDLLLFFFLFLFAFFFFFFAALLLFFHDLLLLFLLLLLHHDLLLLLFFFLLLLHGDLLLLFLLFLFLFLLLRDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLLLLLLLLDGGMAAFDCHCMFFLAFLLLLLLLLAIKKHRDLLLLLLLLLLFFFFLGCCAFADLLLMLLALLMLLMLLLLNNNNNNNNNDENNNNNNNIGIENNNNINLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLKLMKLLLLLLLLLLLLLKLLDDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLNNNNNNNNNNNNNNNNNEGNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLDGNNDDDDDDECNENNNFLALLFFFFLLMMAMMLMMMMMMMMMMMMMAMMMMLLFAFFFMMLMMMFFFFMMFFMAMFMFFMAALFLLFFFLMFAMDENNNLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLGCCCCGGGGGGHDMFFFCLLLFFLAAALFFCFLAFCFFCFCFCFFCFAACCLLCLCDLLLMLMLMLLLMDDLLMLLLLLMMMMLLLLMLLMMLLLMLLLLLLLLLLLMLDLLLMLLLLLLLLLLLDHHHHHDFLLLLLLLLLMLMLLFLLMFLLFLMFLFFLLLLFLLFFRRRRHHHRRRRRDDDDMMMFFFFFFFLLLLLLLLLLLLMLLLMLLLLLLLLLLFLMMFFLLLLLLLLLLLLLDLLLLLLLMMLLLLLLLMLLLLLLLLMDLLLMMMMMMMMMMMMLLLLLDDLLLLLLMMMLLLMLLLLLMMLLLLLLMLLLLLLLLNNEDRNNNNNNNNNDDEMLLLLLLLLLLLLLLLLLMLLMMLLLLLLLMLLLLMMALMMLLLLMALLLLMLLLLLLLLLLLLLLLLLRHDLLLFFMLLLFLFLLLLFEHRNDNMFLLLLLLLLMLLLFLLMLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGHDMFFLLLFFLLFFLAALLFFLAAADLLLLLLLLLLLDDLLLLLLLLMMLLLLLLLLLMMLLLLLLLLLLLDDMLLLLLLLLMLLLLMLLLLMLLLLLLLMLLLLLLLLLLDLLLLLLLLLLLIIILLLLKLKLKLKLLFDLLLMALAALLLFLLLRRRRRRRRRRDMLMLLMLLLLLLLDLLLMMLLLLLLMLLLDGDDDDIDDDDDDAAFMAMMMKFFMMMMMKFFMFMFAMMKKMKKKKMMKAAKGGFFFFFFFFFFCCCFAAAADGLLLLLLLLLLLLLLLLGDLLLLLFLLLLLHHRRFFFFFHDGFFLLLFLLLFLLLLLICCDLLLKLLLMAMLLLLLLKFLLLLALLLLLMLMKKLKKKKLMKLLLLLKDLLLLMLLLLLLLLLLLMLLLLLDLMLLLLLMLLLLLLLLLLLLLLLLLLSSLLSSLLSSLLSSDDDLLSSLLSSLLSSLLSSIILLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLCCAADDLLLLLLLLLLLLLLLLLLLLLLLLLLDHDMFFLMLLLLLLLLLLLFFFFFLLLLFLFFFLLMLLLLFLLLLFLMLLLLFFFFLLLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRRDEDDDEDDNMLLMLLLLLLLLLLMMMLLLLLFFFMLLMMMLLMFLMMMAAMMAMALLLLLLLLLANLLSSLLSSLLSSLLSSLLSSLLSSLLSSLLSSRRDEDNIILLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLDLLLLLLMMMLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNELLLLLLLLLLLLLLLHFFFDDDLLLLLLLLLLLLLLLMLLMMLLLMLLLLLLLLLMMMMMMMMLLLLLLLLLLLLGFFAAAAAFAFAFLLSSNNNDELLSSNNNNNNNELLSSDNLLSSLLSSLLSSLLSSLLSSDDDLLSSLLSSLLSSLLSSNRRRDDRRRRRRNLLSSLLSSDNDDLLSSLLSSNLLSSLLSSDIIIIIIIIIIIILLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLMMLLLLLLFMMLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFHCCCACFAACEDNNNNLLLLLLLLLLLLLLLLLLLDILLLLLKLLMLLLKLMHFFFHRRDLLLFLFMLLLMLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNLLLLLLLLLLLLLLDNNDHDNNDDDDEDNNMFFLMLLMMAAALMFMFMFMLFFFMLAMMMMMFMMFMAMMMMFMMMMFAAMMMMMAMFMMFMLLLMMMMLLSSLLSSLLSSLLSSLLSSLLSSLLSSLLSSLLSSLLSSLLSSLLSSLLSSLLSSLLSSLLSSLLSSLLSSDIILLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDFLLLLLLLLLMMMLLLLLDDHMFFLLLLLLLMLFFLLFLFFFMLLLFFFLFFLLLLLLDLLLMLLLLLLLLLLDHDMFFLLLLLLLFLLLLLLLFMLLLLLLLFFNNNNDDENNLLLLLLLLLMMLLMLLMMLLLLLLLLLLLLMLLLMLLLLLMMMLLMMLLLLMMMMMMMLMLLLLLLLLLMMNNNDENLLLLLLLLLLLLLLMLLLLLMMLLMMLMMLLLLLLLLLMMRDFAMFMFFMMFFMDLLLLLLLMLLMLLLLLMLLLLLLLLMLLLLMFFFF","n":["TaskTrampoline","arch","as_any","borrow","borrow_mut","console","constants","drivers","ebss","edata","eprint","eprintln","erodata","error","etext","file","from","fsio","get_file","into","lang","loaders","manually_alloc_range","manually_alloc_user_str","memory","print","println","push_file","raw_time","raw_timer","sbss","sdata","set_timer","signal","srodata","start_kernel","start_kernel_secondary","stext","suspend_current_task","syscall","task","test_vm","testcases","trap","try_from","try_into","type_id","utils","KERNEL_STACK","KernelStack","as_any","borrow","borrow_mut","clear_bss","cpu_init","entry","from","get_cpu_id","into","kernel_stack","page_control","secondary_entry","set_boot_pt","set_stack","set_timer","shutdown_failure","start_hart","stdin","stdout","try_from","try_into","type_id","allow_sum_access","refuse_sum_access","STDIN","Stdin","as_any","borrow","borrow_mut","from","getchar","getchar","into","try_from","try_into","type_id","STDERR","STDOUT","Stdout","as_any","borrow","borrow_mut","from","into","putchar_raw","stderr_puts","stdout_puts","try_from","try_into","type_id","write_str","LOGGER","LogLevel","SimpleLogger","as_any","borrow","borrow_mut","enabled","error_print","flush","from","init_logger","into","level_to_color_code","log","print","try_from","try_into","type_id","AT_FDCWD","AddrArea","CPU_ID_LIMIT","DEVICE_END","DEVICE_START","ELF_BASE_RELOCATE","FD_LIMIT_ORIGIN","FIRST_CPU_ID","FS_IMG_SIZE","IS_PRELOADED_FS_IMG","IS_SINGLE_CORE","IS_TEST_ENV","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","LAST_CPU_ID","LOCAL_FS_IMG_SIZE","LOG_LEVEL","MMIO_REGIONS","NO_PARENT","ORIGIN_USER_PROC_NAME","PAGE_SIZE","PAGE_SIZE_BITS","PHYS_MEMORY_END","PHYS_MEMORY_OFFSET","PHYS_VIRT_OFFSET","PIPE_SIZE_LIMIT","REPORT_PAGE_FAULT","ROOT_DIR","SENDFILE_BUFFER_SIZE","SIGNAL_RETURN_TRAP","SIGSET_SIZE_IN_BIT","SIGSET_SIZE_IN_BYTE","SOCKET_BUFFER_SIZE_LIMIT","SPIN_LOOP_AFTER_BOOT","TEST_FS_IMG_SIZE","TID_LIMIT","TMP_SIZE_LIMIT","USER_INIT_STACK_SIZE","USER_STACK_OFFSET","USER_STACK_RED_ZONE","USER_STACK_SIZE","USER_VIRT_ADDR_LIMIT","USE_MSYNC","as_any","borrow","borrow_mut","from","into","try_from","try_into","type_id","BLOCK_DEVICE","BlockDeviceImpl","MemoryMappedFsIoType","__private_field","block","memory","new_memory_mapped_fs","BLOCK_DEVICE","BlockDevice","LAZY","VirtIOBlock","__private_field","__stability","__static_ref_initialize","as_any","block_device","block_device_test","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","virtio_block","BlockDevice","read_block","write_block","QUEUE_FRAMES","VIRTIO0","VirtIOBlock","as_any","borrow","borrow_mut","from","into","new","read_block","try_from","try_into","type_id","virtio_dma_alloc","virtio_dma_dealloc","virtio_phys_to_virt","virtio_virt_to_phys","write_block","IoType","IoWrapper","MemoryMappedDevice","device","new_memory_mapped_fs","wrapper","MemoryMappedDevice","as_any","borrow","borrow_mut","end","flush","from","fsio","into","new","pos","read","seek","start","try_from","try_into","type_id","write","AddrInUse","AddrNotAvailable","AlreadyExists","BrokenPipe","ConnectionAborted","ConnectionRefused","ConnectionReset","Current","End","Error","ErrorKind","Interrupted","InvalidData","InvalidInput","NotConnected","NotFound","Other","PermissionDenied","Read","Result","Seek","SeekFrom","Start","TimedOut","UnexpectedEof","WouldBlock","Write","WriteZero","as_any","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","by_ref","by_ref","bytes","chain","clone","clone","clone_into","clone_into","cmp","eq","eq","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","get_ref","hash","initializer","into","into","into","into_inner","kind","new","partial_cmp","read","read_exact","repr","seek","take","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write_all","write_fmt","IoWrapper","TransferError","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","flush","fmt","from","from","from","from","from","inner","into","into","into","into_storage","is_interrupted","new","new_unexpected_eof_error","new_write_zero_error","read","read_exact","seek","try_from","try_from","try_into","try_into","type_id","type_id","write","write_all","CpuLocal_SwitchedFromEmptyTask","FdManager_FdNotFound","FdManager_NoAvailableFd","Loader_AppNotFound","Loader_CanNotParseInterpreter","Loader_InvalidSection","Loader_InvalidSegment","Loader_ParseElfFailed","Loader_PhdrNotFound","Loader_Skipped","MemorySet_AreaNotMapped","MemorySet_InvalidRange","MemorySet_PartialUnmap","MemorySet_UnmapAreaNotFound","MemorySet_UserMmapIntersectWithKernel","Memory_RunOutOfConsecutiveMemory","Memory_RunOutOfMemory","OSError","OSResult","Ok","PageFaultHandler_AccessDenied","PageFaultHandler_TrapAtValidPage","PageFaultHandler_Unhandled","PageTable_FlagUpdateError","PageTable_FrameAllocFailed","PageTable_PageAlreadyMapped","PageTable_PageNotMapped","PageTable_RawAccessToPageTable","PageTable_UnknownErrorWhenMap","PageTable_UnknownErrorWhenUnmap","PageTable_VirtNotFound","PmAreaLazy_ReleaseNotAllocatedPage","PmArea_InvalidRange","PmArea_OutOfRange","PmArea_ShrinkFailed","PmArea_SplitFailed","Task_MmapLengthDisagree","Task_NoTrapHandler","Task_RunOutOfMemory","VmArea_InvalidRange","VmArea_InvalidUnmap","VmArea_VmSizeNotEqualToPmSize","as_any","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from","into","to_owned","try_from","try_into","type_id","BackEndFile","BufferFile","Current","End","FatFile","FdManager","FileDisc","FsStat","Pipe","RingBuffer","SeekFrom","Socket","Start","SyncPolicy","SyncRead","SyncReadWrite","SyncWrite","add_sys_info","as_any","backend","borrow","borrow_mut","check_dir_exists","check_file_exists","check_virt_dir_exists","check_virt_file_exists","clone","clone_into","data","data","device","dir","end","eq","f_bavail","f_bfree","f_blocks","f_bsize","f_ffree","f_files","f_flags","f_frsize","f_fsid","f_namelen","f_spare","f_type","fd_allocator","fd_manager","file","file","file","files","fmt","from","fs_init","fs_stat","get_dir_entry_iter","get_virt_dir_if_possible","get_virt_file_if_possible","head","inner","into","is_read","len","limit","list_files_at_root","load_next_testcase","mkdir","mount_fat_fs","name","offset","open_file","origin_fs_stat","path","pipe","policy","read_link","readable","rename_or_move","show_testcase_result","size_limit","socket","stdio","to_owned","try_add_link","try_from","try_into","try_make_virt_dir","try_remove_link","try_remove_virt_file","type_id","umask","umount_fat_fs","vfs","writable","BackEndFile","SyncPolicy","SyncRead","SyncReadWrite","SyncWrite","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone_as_fork","clone_into","eq","file","from","from","into","into","modify_offset","new","offset","policy","read","read_from_offset","split","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write","write_to_offset","FATFileSystem","FatDir","FatFile","FdDir","FileDisc","FsDir","FsDirIter","FsFile","FsIO","FsOCC","FsTP","LAZY","MEMORY_FS","__private_field","__stability","__static_ref_initialize","add_link_for_all_files_in_dir","add_sys_info","as_any","borrow","borrow_mut","check_dir_exists","check_file_exists","deref","fat_dir","fat_file","fd_dir","from","fs_init","get_dir_entry_iter","get_link_count","inner_open_dir","into","link","list_files_at_root","load_next_testcase","map_path_and_file","mkdir","mount_fat_fs","open_file","origin_fs_stat","parse_dir","read_link","remove_file","rename_or_move","show_testcase_result","split_path_and_file","stat","test","try_add_link","try_add_rev_link","try_from","try_into","try_remove_link","type_id","umount_fat_fs","FatDir","as_any","borrow","borrow_mut","dir","from","inner","into","readable","try_from","try_into","type_id","writable","FatFile","FatFileInnner","as_any","as_any","atime","borrow","borrow","borrow_mut","borrow_mut","clear","ctime","dir","file","flags","from","from","get_stat","get_status","inner","into","into","mtime","name","new","read","read_all","readable","ready_to_read","ready_to_write","seek","set_close_on_exec","set_status","try_from","try_from","try_into","try_into","type_id","type_id","writable","write","FdDir","as_any","borrow","borrow_mut","dir","from","get_dir","get_stat","into","new","read","set_close_on_exec","try_from","try_into","type_id","write","FileDisc","GCC_INCLUDE","GCC_LINK_INCLUDE","LINK_COUNT_MAP","LINK_PATH_MAP","MOUNTED","MountedFs","add_link","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","device","eq","file","from","from","get_link_count","into","into","mnt_dir","mount_fat_fs","new","new","parse_file_name","partial_cmp","path","read_link","to_owned","try_add_link","try_add_rev_link","try_from","try_from","try_into","try_into","try_remove_link","type_id","type_id","umount_fat_fs","get_fs_stat","BUSYBOX_TESTCASES","CASES","FORMAT_LIBC_DYNAMIC","FORMAT_LIBC_STATIC","LAZY","LAZY","LAZY","LIBC_DYNAMIC_TESTCASES","LIBX_STATIC_TESTCASES","LUA_TESTCASES","PRELIMINARY_TESTCASES","SAMPLE","SYS_INFO","TESTCASES_ITER","TEST_STATUS","TestStatus","__private_field","__private_field","__private_field","__stability","__stability","__stability","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","add_sys_info","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cnt","deref","deref","deref","failed_tests","final_info","from","from","from","from","into","into","into","into","load","load_next_testcase","new","now","passed","show_testcase_result","split_argv","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_result","FdManager","as_any","borrow","borrow_mut","close_cloexec_files","copy_all","copy_fd_anywhere","copy_fd_to","fd_allocator","files","from","get_file","get_files_if_all_exists","get_limit","get_umask","into","is_full","limit","modify_limit","new","push","remove_file","set_umask_and_get_old","try_from","try_into","type_id","umask","FsStat","as_any","borrow","borrow_mut","f_bavail","f_bfree","f_blocks","f_bsize","f_ffree","f_files","f_flags","f_frsize","f_fsid","f_namelen","f_spare","f_type","from","into","try_from","try_into","type_id","Pipe","RingBuffer","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","data","data","end","from","from","get_len","head","into","into","is_empty","is_full","is_hang_up","is_read","len","new","new_pipe","read","read","ready_to_read","ready_to_write","size_limit","try_from","try_from","try_into","try_into","type_id","type_id","write","write","AF_INET","AF_UNIX","Domain","IpAddr","SOCKET_TYPE_MASK","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","Socket","SocketInner","SocketType","addr","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clonew","domain","eq","eq","family","flags","fmt","fmt","from","from","from","from","get_status","inner","into","into","into","into","is_listening","local_endpoint","loopback","new","port","protocol","read","ready_to_read","ready_to_write","recvfrom","remote_endpoint","resolution","sendto","set_endpoint","set_listening","set_status","stype","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","LOCAL_LOOPBACK_ADDR","PORT_MAP","PortData","as_any","borrow","borrow_mut","can_read","can_write","data","from","into","new","print_hex_dump","read","read_from_port","try_from","try_into","type_id","write","write_to_port","AddrType","EPHEMERAL_PORT","FAMILY_INTERNET","Ip","IpAddr","Unknown","addr","addr_resolution","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","family","fmt","from","from","get_ephemeral_port","into","into","port","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Stderr","Stdin","Stdout","as_any","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","get_stat","get_stat","get_stat","into","into","into","read","read","read","ready_to_read","ready_to_read","ready_to_read","ready_to_write","ready_to_write","ready_to_write","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write","write","BufferFile","LAZY","VFS_DIRS","__private_field","__stability","__static_ref_initialize","as_any","borrow","borrow_mut","check_virt_dir_exists","check_virt_file_exists","deref","from","get_virt_dir_if_possible","get_virt_file_if_possible","into","null","temp","try_from","try_into","try_make_virt_dir","try_remove_virt_file","type_id","virt_dir","virt_file","zero","NullFile","as_any","borrow","borrow_mut","from","get_stat","into","read","try_from","try_into","type_id","write","DirEntry","VirtDir","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","check_file_exists","create_file","entry","file","from","from","get_dir","get_file","get_name","get_stat","into","into","mkdir","name","name","new","new","read","remove_file","try_from","try_from","try_into","try_into","type_id","type_id","write","VirtFile","VirtFileInner","_flags","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clear","clear","frames","from","from","get_size","get_stat","inner","into","into","new","new","pos","read","read_from_offset","read_from_offset","read_inner","seek","seek","set_pos","size","try_from","try_from","try_into","try_into","type_id","type_id","write","write_inner","write_to_offset","write_to_offset","ZeroFile","as_any","borrow","borrow_mut","from","get_stat","into","read","try_from","try_into","type_id","write","Read","Seek","Write","by_ref","by_ref","bytes","chain","flush","initializer","read","read_exact","seek","take","write","write_all","write_fmt","panic","ElfLoader","as_any","borrow","borrow_mut","elf","flags","from","init_info","init_stack","init_vm","into","new","parse_user_app","try_from","try_into","type_id","AT_PAGESZ","AT_PHDR","AT_PHENT","AT_PHNUM","AT_RANDOM","REL_GOT","REL_PLT","REL_RELATIVE","R_RISCV_64","R_RISCV_RELATIVE","InitInfo","args","as_any","auxv","borrow","borrow_mut","envs","fmt","from","into","serialize","try_from","try_into","type_id","InitStack","as_any","borrow","borrow_mut","buttom","data","deref","from","into","new","push_slice","push_str","sp","try_from","try_into","type_id","FdAllocator","Frame","MemorySet","PTEFlags","PageTable","PageTableEntry","PmArea","PmAreaFixed","PmAreaLazy","Tid","UserPtr","UserPtrUnchecked","VmArea","addr","allocator","allocator_init","area_map","areas","backend","bits","bits","clone_as_fork","create_mapping","enable_kernel_page_table","end","end","flags","frames","frames","get_frame","get_phys_memory_regions","handle_kernel_page_fault","is_user","kernel_end","name","new_memory_set_for_task","page_table","pma","pt","read","release_frame","root_paddr","shrink_left","shrink_right","size","split","start","start","sync_frame_with_file","user","vmm","write","PhysAddr","VirtAddr","addr_to_page_id","align_down","align_up","cross_page","page_count","page_id_to_addr","page_offset","phys_to_virt","pte_idx_of_virt_addr","virt_to_phys","FdAllocator","Frame","Tid","allocator_init","fd","frame","heap","tid","FdAllocator","PidAllocatorImpl","alloc","alloc_exact","alloc_exact_if_possible","as_any","borrow","borrow_mut","dealloc","expand_range","from","into","is_allocated","new","shrink_range","try_from","try_into","type_id","Frame","PageFrameConfig","as_any","borrow","borrow_mut","frame_idx_to_phys_addr","from","init","into","phys_addr_to_frame_idx","try_from","try_into","type_id","HEAP","HEAP_ALLOCATOR","HEAP_BLOCK","MACHINE_ALIGN","__rg_alloc","__rg_alloc_zeroed","__rg_dealloc","__rg_realloc","init","TID_ALLOCATOR","Tid","TidAllocatorImpl","alloc_tid","alloc_tid_raw","as_any","borrow","borrow_mut","dealloc_tid_raw","drop","fmt","from","init","into","new","try_from","try_into","type_id","PmArea","PmAreaFixed","PmAreaLazy","VmArea","as_any","borrow","borrow_mut","clone_as_fork","contains","copy_to_new_area_empty","copy_to_new_area_with_data","end","fixed","flags","fmt","from","from_delay_pma","from_fixed_pma","from_fixed_pma_negative_offset","from_identical_pma","get_frame","get_page_table","handle_page_fault","into","is_overlap_with","is_user","lazy","manually_alloc_page","map_area","modify","modify_area_flags","msync","name","new","pma","read","release_frame","remove","shrink_left","shrink_right","size","split","split","start","sync_frame_with_file","try_from","try_into","type_id","unmap_area","unmap_area_partial","write","PmAreaFixed","as_any","borrow","borrow_mut","clone_as_fork","end","fmt","from","get_frame","into","new","read","release_frame","shrink_left","shrink_right","size","split","start","sync_frame_with_file","try_from","try_into","type_id","write","PmAreaLazy","as_any","backend","borrow","borrow_mut","clone_as_fork","fmt","for_each_frame","frames","from","get_frame","into","new","new_from_frames","read","release_frame","shrink_left","shrink_right","size","split","sync_frame_with_file","try_from","try_into","type_id","write","ACCESS","ACCESS","ACCESS","ACCESS","DIRTY","DIRTY","DIRTY","DIRTY","EXECUTE","EXECUTE","EXECUTE","EXECUTE","GLOBAL","GLOBAL","GLOBAL","GLOBAL","PTEFlags","PageTable","PageTableEntry","READ","READ","READ","READ","USER","USER","USER","USER","VALID","VALID","VALID","VALID","WRITE","WRITE","WRITE","WRITE","__BitFlags","__BitFlags","addr","all","alloc_and_set","as_any","as_any","as_any","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","cmp","complement","contains","current","current_root_paddr","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","flush_tlb","fmt","fmt","fmt","fmt","fmt","force_write","frames","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_root","get_addr_create","get_entry","get_pte_at","get_root_paddr","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","is_empty","is_valid","map","map_kernel_regions","new","new","not","partial_cmp","query","readable","remove","root_paddr","self_as_usize","set","set_addr","set_all","set_current","set_current_root_paddr","set_flags","set_flags","sub","sub_assign","symmetric_difference","to_owned","toggle","token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","unmap","writable","UserPtr","UserPtrUnchecked","user_data","user_ptr","UserPtr","UserPtrUnchecked","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","from","into","into","raw","raw","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","KERNEL_MEMORY_SET","LAZY","MemorySet","__private_field","__stability","__static_ref_initialize","activate","area_map","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clear_user_pages","clear_user_pages_and_save_kernel","copy_as_fork","deref","drop","ebss","edata","enable_kernel_page_table","erodata","etext","flush_tlb","fmt","from","from","handle_kernel_page_fault","handle_page_fault","img_end","img_start","init_kernel_memory_set","into","into","is_user","manually_alloc_page","manually_alloc_range","manually_alloc_type","manually_alloc_user_str","map_kernel_regions","mprotect","msync_areas","munmap","new_kernel","new_memory_set_for_task","new_user","pt","push","push_with_backend","read","read_write","sbss","sdata","srodata","stext","try_from","try_from","try_into","try_into","type_id","type_id","write","ERR","Ignore","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGPWR","SIGQUIT","SIGRT1","SIGRT10","SIGRT11","SIGRT12","SIGRT13","SIGRT14","SIGRT15","SIGRT16","SIGRT17","SIGRT18","SIGRT19","SIGRT2","SIGRT20","SIGRT21","SIGRT22","SIGRT23","SIGRT24","SIGRT25","SIGRT26","SIGRT27","SIGRT28","SIGRT29","SIGRT3","SIGRT30","SIGRT31","SIGRT4","SIGRT5","SIGRT6","SIGRT7","SIGRT8","SIGRT9","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_DFL","SIG_IGN","SigAction","SigActionDefault","SigActionFlags","SigInfo","SignalHandlers","SignalNo","SignalReceivers","SignalUserContext","Terminate","actions","as_any","as_any","bits","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","context","flags","flags","from","from","get_action","get_action_ref","get_one_signal","get_signals_from_tid","global_logoff_signals","global_register_signals","handler","into","into","link","mask","mask","new","new","restorer","send_signal","set_action","si_code","si_errno","si_signo","sig_action","sig_info","sig_mask","sig_received","signal_no","stack","tid2signals","to_owned","to_owned","try_add_bit","try_from","try_from","try_into","try_into","type_id","type_id","ucontext","Ignore","SA_NOCLDSTOP","SA_NOCLDSTOP","SA_NOCLDSTOP","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NOCLDWAIT","SA_NOCLDWAIT","SA_NOCLDWAIT","SA_NODEFER","SA_NODEFER","SA_NODEFER","SA_NODEFER","SA_ONSTACK","SA_ONSTACK","SA_ONSTACK","SA_ONSTACK","SA_RESETHAND","SA_RESETHAND","SA_RESETHAND","SA_RESETHAND","SA_RESTART","SA_RESTART","SA_RESTART","SA_RESTART","SA_RESTORER","SA_RESTORER","SA_RESTORER","SA_RESTORER","SA_SIGINFO","SA_SIGINFO","SA_SIGINFO","SA_SIGINFO","SIG_DFL","SIG_IGN","SigAction","SigActionDefault","SigActionFlags","Terminate","__BitFlags","__BitFlags","all","as_any","as_any","as_any","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","default","difference","empty","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_restorer","handler","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","mask","not","of_signal","partial_cmp","remove","restorer","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","SigInfo","as_any","borrow","borrow_mut","default","from","into","si_code","si_errno","si_signo","try_from","try_into","type_id","ERR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGPWR","SIGQUIT","SIGRT1","SIGRT10","SIGRT11","SIGRT12","SIGRT13","SIGRT14","SIGRT15","SIGRT16","SIGRT17","SIGRT18","SIGRT19","SIGRT2","SIGRT20","SIGRT21","SIGRT22","SIGRT23","SIGRT24","SIGRT25","SIGRT26","SIGRT27","SIGRT28","SIGRT29","SIGRT3","SIGRT30","SIGRT31","SIGRT4","SIGRT5","SIGRT6","SIGRT7","SIGRT8","SIGRT9","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SignalNo","as_any","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from","into","to_owned","try_from","try_from","try_into","type_id","TID2SIGNALS","get_signals_from_tid","global_logoff_signals","global_register_signals","MachineContext","SignalStack","SignalUserContext","as_any","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","context","default","default","flags","flags","fmt","fmt","fmt","fpstate","from","from","from","get_pc","init","init_with_pc","into","into","into","link","pc","reserved","reserved_","sig_mask","size","sp","stack","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","SysResult","check_thread_blocked","clear_loop_checker","flags","fs","futex","loops","process","set_waiter_for_thread","socket","syscall","syscall_no","wake_thread","ASYNC","ASYNC","ASYNC","ASYNC","BLK","CHR","DIR","Dirent64","Dirent64Type","EXCHANGE","EXCHANGE","EXCHANGE","EXCHANGE","FIFO","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_SETFD","F_SETFL","Fcntl64Cmd","INVALIDATE","INVALIDATE","INVALIDATE","INVALIDATE","IoVec","LNK","MAP_ANONYMOUS","MAP_ANONYMOUS","MAP_ANONYMOUS","MAP_ANONYMOUS","MAP_FIXED","MAP_FIXED","MAP_FIXED","MAP_FIXED","MAP_NORESERVE","MAP_NORESERVE","MAP_NORESERVE","MAP_NORESERVE","MAP_PRIVATE","MAP_PRIVATE","MAP_PRIVATE","MAP_PRIVATE","MAP_SHARED","MAP_SHARED","MAP_SHARED","MAP_SHARED","MMAPFlags","MMAPPROT","MSyncFlags","NOREPLACE","NOREPLACE","NOREPLACE","NOREPLACE","PROT_EXEC","PROT_EXEC","PROT_EXEC","PROT_EXEC","PROT_READ","PROT_READ","PROT_READ","PROT_READ","PROT_WRITE","PROT_WRITE","PROT_WRITE","PROT_WRITE","REG","RLIMIT_AS","RLIMIT_NOFILE","RLIMIT_STACK","RLimit","RenameFlags","SEEK_CUR","SEEK_END","SEEK_SET","SIG_BLOCK","SIG_SETMASK","SIG_UNBLOCK","SOCK","SYMLINK_NOFOLLOW","SYMLINK_NOFOLLOW","SYMLINK_NOFOLLOW","SYMLINK_NOFOLLOW","SYNC","SYNC","SYNC","SYNC","SysInfo","UNKNOWN","UtimensatFlags","UtsName","WCONTINUED","WCONTINUED","WCONTINUED","WCONTINUED","WHITEOUT","WHITEOUT","WHITEOUT","WHITEOUT","WHT","WIMTRACED","WIMTRACED","WIMTRACED","WIMTRACED","WNOHANG","WNOHANG","WNOHANG","WNOHANG","WaitFlags","__BitFlags","__BitFlags","__BitFlags","__BitFlags","__BitFlags","__BitFlags","__BitFlags","__BitFlags","__BitFlags","__BitFlags","__BitFlags","__BitFlags","all","all","all","all","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","base","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bufferram","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","d_ino","d_name","d_name_offset","d_off","d_reclen","d_type","default","difference","difference","difference","difference","difference","difference","domainname","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freehigh","freeram","freeswap","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_str","hash","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","len","loads","machine","mem_unit","nodename","not","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","procs","release","remove","remove","remove","remove","remove","remove","resolve_clone_flags_and_signal","rlim_cur","rlim_max","set","set","set","set","set","set","set_info","sharedram","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","sysname","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","totalhigh","totalram","totalswap","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","uptime","version","get_dir_from_fd","resolve_path_from_fd","sys_access","sys_chdir","sys_close","sys_dup","sys_dup3","sys_fcntl64","sys_fstat","sys_fstatat","sys_getcwd","sys_getdents64","sys_ioctl","sys_linkat","sys_lseek","sys_mkdir","sys_mount","sys_open","sys_pipe","sys_pread","sys_read","sys_readlinkat","sys_readv","sys_renameat2","sys_sendfile64","sys_statfs","sys_umask","sys_umount","sys_unlinkat","sys_utimensat","sys_write","sys_writev","FCOUNT","FutexWaiter","Waiter","check_thread_blocked","flags","set_waiter_for_thread","sys_futex","waiter","waiting_board","wake_thread","Flags","FutexFlag","REQUEUE","UNSUPPORTED","WAIT","WAKE","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_private","new","operation","try_from","try_from","try_into","try_into","type_id","type_id","FutexWaiter","Waiter","as_any","borrow","borrow_mut","from","into","is_woken","is_woken","new","timed_out_us","try_from","try_into","type_id","wake","wake","woken","WAITING_BOARD","check_thread_blocked","set_waiter_for_thread","wake_thread","DEAD_LOOP_CNT","LOOP_EXIT_CODE","LOOP_LIMIT","LoopCounter","as_any","borrow","borrow_mut","check_dead_loop","clear","clear_loop_checker","cnt","count","from","into","limit","try_from","try_into","type_id","sys_brk","sys_clone","sys_exec","sys_execve","sys_exit","sys_getegid","sys_geteuid","sys_getgid","sys_getpid","sys_getppid","sys_gettid","sys_getuid","sys_kill","sys_mmap","sys_mprotect","sys_msync","sys_munmap","sys_prlimt64","sys_set_tid_address","sys_sigaction","sys_sigprocmask","sys_sigreturn","sys_sysinfo","sys_tkill","sys_uname","sys_wait4","sys_yield","waitpid","sys_accept4","sys_bind","sys_connect","sys_listen","sys_recvfrom","sys_sendto","sys_socket","ACCEPT","ACCEPT4","ACCESS","BIND","BRK","CHDIR","CHMOD","CLOCK_GET_TIME","CLONE","CLOSE","CONNECT","DUP","DUP3","EPOLL_CREATE","EPOLL_CTL","EPOLL_WAIT","EXECVE","EXIT","EXIT_GROUP","FCNTL64","FDATASYNC","FSTAT","FSTATAT","FSYNC","FUTEX","GETCWD","GETDENTS64","GETEGID","GETEUID","GETGID","GETITIMER","GETPEERNAME","GETPID","GETPPID","GETRUSAGE","GETSOCKNAME","GETSOCKOPT","GETTID","GETUID","GET_ROBUST_LIST","GET_TIME_OF_DAY","IOCTL","KILL","LINKAT","LISTEN","LSEEK","MADVISE","MEMBARRIER","MKDIR","MMAP","MOUNT","MPROTECT","MSYNC","MUNMAP","NANOSLEEP","OPEN","PIPE","PPOLL","PRCTL","PREAD","PRLIMIT64","PSELECT6","READ","READLINKAT","READV","RECVFROM","RECVMSG","RENAMEAT2","SENDFILE64","SENDMSG","SENDTO","SETITIMER","SETSOCKOPT","SET_ROBUST_LIST","SET_TID_ADDRESS","SHUDOWN","SIGACTION","SIGPROCMASK","SIGRETURN","SIGTIMEDWAIT","SOCKET","STATFS","SYSINFO","SYSLOG","SyscallNo","TIMES","TKILL","UMASK","UMOUNT","UNAME","UNKNOWN","UNLINKAT","UTIMENSAT","WAIT4","WRITE","WRITEV","YIELD","as_any","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","to_owned","try_from","try_from","try_into","type_id","CloneFlags","Dying","Exited","KernelStack","LAZY","ORIGIN_USER_PROC","Ready","Running","Scheduler","TaskContext","TaskControlBlock","TaskControlBlockInner","TaskStatus","TimeStat","UnInit","Zombie","__private_field","__stability","__static_ref_initialize","as_any","bits","borrow","borrow_mut","children","clear_child_tid","clone_flags","context","cpu_local","deref","dir","exec_new_task","exit_code","exit_current_task","fd_manager","fetch_task_from_scheduler","frame","from","get_current_task","handle_signals","handle_user_page_fault","inner","into","kernel_stack","kernel_stack","kernel_tick","parent","pid","ppid","push_task_to_scheduler","ra","ready_queue","run_tasks","s","scheduler","send_sigchld_when_exit","set_child_tid","signal_handlers","signal_receivers","signal_return","signal_set_siginfo","sp","start_tick","stime_us","suspend_current_task","switch","task","task_cx","task_status","tid","tid","time","time_stat","timer_interval_us","timer_kernel_to_user","timer_remained_us","timer_type","timer_user_to_kernel","trap_cx_before_signal","try_from","try_into","type_id","user_heap_top","user_tick","utime_us","vm","CLONE_CHILD_CLEARTID","CLONE_CHILD_CLEARTID","CLONE_CHILD_CLEARTID","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_CHILD_SETTID","CLONE_CHILD_SETTID","CLONE_CHILD_SETTID","CLONE_DETACHED","CLONE_DETACHED","CLONE_DETACHED","CLONE_DETACHED","CLONE_FILES","CLONE_FILES","CLONE_FILES","CLONE_FILES","CLONE_FS","CLONE_FS","CLONE_FS","CLONE_FS","CLONE_NEWNS","CLONE_NEWNS","CLONE_NEWNS","CLONE_NEWNS","CLONE_NEWTIME","CLONE_NEWTIME","CLONE_NEWTIME","CLONE_NEWTIME","CLONE_PARENT","CLONE_PARENT","CLONE_PARENT","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PARENT_SETTID","CLONE_PARENT_SETTID","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PIDFD","CLONE_PIDFD","CLONE_PIDFD","CLONE_PTRACE","CLONE_PTRACE","CLONE_PTRACE","CLONE_PTRACE","CLONE_SETTLS","CLONE_SETTLS","CLONE_SETTLS","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SIGHAND","CLONE_SIGHAND","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_SYSVSEM","CLONE_SYSVSEM","CLONE_SYSVSEM","CLONE_THREAD","CLONE_THREAD","CLONE_THREAD","CLONE_THREAD","CLONE_UNTRACED","CLONE_UNTRACED","CLONE_UNTRACED","CLONE_UNTRACED","CLONE_VFORK","CLONE_VFORK","CLONE_VFORK","CLONE_VFORK","CLONE_VM","CLONE_VM","CLONE_VM","CLONE_VM","CloneFlags","__BitFlags","__BitFlags","all","as_any","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","TaskContext","__restore","as_any","borrow","borrow_mut","clone","clone_into","from","get_ra","goto_restore","into","ra","s","sp","to_owned","try_from","try_into","type_id","zero_init","CPU_CONTEXTS","CpuLocal","LAZY","__private_field","__stability","__static_ref_initialize","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","current","current","deref","exec_new_task","exit_current_task","from","from","get_current_task","get_idle_task_cx_ptr","handle_signals","handle_user_page_fault","handle_zombie_task","idle_task_cx","into","into","new","run_tasks","signal_return","suspend_current_task","take_current","timer_kernel_to_user","timer_user_to_kernel","try_from","try_from","try_into","try_into","type_id","type_id","KernelStack","as_any","borrow","borrow_mut","frame","from","get_first_context","get_sp","into","new","print_info","push_first_context","try_from","try_into","type_id","GLOBAL_TASK_SCHEDULER","LAZY","Scheduler","__private_field","__stability","__static_ref_initialize","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","deref","fetch_task_from_scheduler","from","from","into","into","new","pop","push","push_task_to_scheduler","ready_queue","size","try_from","try_from","try_into","try_into","type_id","type_id","__move_to_context","__switch","Dying","Exited","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","UnInit","Zombie","as_any","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","clear_child_tid","clone","clone_into","dir","eq","exec","exit_code","fd_manager","from","from","from","from_app_name","from_clone","get_code_if_exit","get_pid_num","get_ppid","get_status","get_task_cx_ptr","get_tid_num","get_user_heap_top","inner","into","into","into","kernel_stack","load_trap_cx_if_handling_signals","mmap","mprotect","msync","munmap","parent","pid","ppid","save_if_set_siginfo","save_trap_cx_if_not_handling_signals","send_sigchld_when_exit","set_child_tid","set_exit_code","set_status","set_tid_address","set_user_heap_top","signal_handlers","signal_receivers","signal_set_siginfo","task_cx","task_status","tid","time","to_owned","trap_cx_before_signal","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_heap_top","vm","NONE","PROF","REAL","TimeStat","TimerType","VIRTUAL","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clear","eq","fmt","from","from","from","into","into","kernel_tick","new","output","output_raw","output_raw_timer","set_raw_timer","start_tick","stime_us","switch_into_task","switch_out_task","tid","timer_interval_us","timer_kernel_to_user","timer_remained_us","timer_type","timer_user_to_kernel","try_from","try_from","try_from","try_into","try_into","type_id","type_id","update_timer_and_send_signal","user_tick","utime_us","TESTCASES","TrapContext","__alltraps","context","cpu_id","enable_timer_interrupt","fs","init","kernel_trap_handler","sepc","sstatus","trap_handler","user_trap_handler","x","TrapContext","app_exec_context","app_init_context","as_any","borrow","borrow_mut","clone","clone_into","cpu_id","fmt","from","fs","get_a0","get_sepc","get_sp","into","new","sepc","set_a0","set_a1","set_a2","set_gp","set_ra","set_sepc","set_sp","set_tp","sstatus","to_owned","try_from","try_into","type_id","x","get_str_len","raw_ptr_to_ref_str","raw_ptr_to_string","str_ptr_array_to_vec_string"],"q":["maturin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::arch","","","","","","","","","","","","","","","","","","","","","","","","maturin::arch::page_control","","maturin::arch::stdin","","","","","","","","","","","","maturin::arch::stdout","","","","","","","","","","","","","","","maturin::console","","","","","","","","","","","","","","","","","","maturin::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::drivers","","","","","","","maturin::drivers::block","","","","","","","","","","","","","","","","","","","maturin::drivers::block::block_device","","","maturin::drivers::block::virtio_block","","","","","","","","","","","","","","","","","","maturin::drivers::memory","","","","","","maturin::drivers::memory::device","","","","","","","","","","","","","","","","","","maturin::drivers::memory::device::fsio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::drivers::memory::wrapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::backend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::device::fat_dir","","","","","","","","","","","","","maturin::file::device::fat_file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::device::fd_dir","","","","","","","","","","","","","","","","maturin::file::device::link","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::device::stat","maturin::file::device::test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::fd_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::fs_stat","","","","","","","","","","","","","","","","","","","","","maturin::file::pipe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::socket::loopback","","","","","","","","","","","","","","","","","","","","maturin::file::socket::resolution","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::stdio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::vfs","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::vfs::null","","","","","","","","","","","","maturin::file::vfs::virt_dir","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::vfs::virt_file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::file::vfs::zero","","","","","","","","","","","","maturin::fsio","","","","","","","","","","","","","","","","maturin::lang","maturin::loaders","","","","","","","","","","","","","","","","maturin::loaders::flags","","","","","","","","","","maturin::loaders::init_info","","","","","","","","","","","","","","maturin::loaders::init_stack","","","","","","","","","","","","","","","","maturin::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::memory::addr","","","","","","","","","","","","maturin::memory::allocator","","","","","","","","maturin::memory::allocator::fd","","","","","","","","","","","","","","","","","","maturin::memory::allocator::frame","","","","","","","","","","","","","maturin::memory::allocator::heap","","","","","","","","","maturin::memory::allocator::tid","","","","","","","","","","","","","","","","","","maturin::memory::areas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::memory::areas::fixed","","","","","","","","","","","","","","","","","","","","","","","maturin::memory::areas::lazy","","","","","","","","","","","","","","","","","","","","","","","","","maturin::memory::page_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::memory::user","","","","maturin::memory::user::user_ptr","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::memory::vmm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::signal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::signal::sig_action","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::signal::sig_info","","","","","","","","","","","","","maturin::signal::signal_no","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::signal::tid2signals","","","","maturin::signal::ucontext","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::syscall","","","","","","","","","","","","","maturin::syscall::flagsmaturin::syscall::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::syscall::futex","","","","","","","","","","maturin::syscall::futex::flags","","","","","","","","","","","","","","","","","","","","","","","","","maturin::syscall::futex::waiter","","","","","","","","","","","","","","","","","maturin::syscall::futex::waiting_board","","","","maturin::syscall::loops","","","","","","","","","","","","","","","","","","maturin::syscall::process","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::syscall::socket","","","","","","","maturin::syscall::syscall_no","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::task::clone_flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::task::context","","","","","","","","","","","","","","","","","","","maturin::task::cpu_local","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::task::kernel_stack","","","","","","","","","","","","","","","maturin::task::scheduler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::task::switch","","maturin::task::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::task::time_stat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::testcases","maturin::trap","","","","","","","","","","","","","maturin::trap::context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maturin::utils","","",""],"d":["","","","","","","OS运行时用到的常量","","","","打印格式字串，使用与 print 不同的 Mutex 锁","打印格式字串，使用与 println 不同的 Mutex 锁","","错误类型","","…","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","内存管理模块","打印格式字串，无换行","打印格式字串，有换行","","","","","","","信号模块，用于 sigaction / sigreturn / kill 等 …","","主核启动OS","其他核启动OS","","","系统调用实现","任务管理","测试输出linker各段的虚存映射","测例文件示例","中断异常处理","","","","一些不知道该放进哪个模块里的通用工具","所有核的启动栈","一个核的启动栈","","","","","需要在堆初始化之后，因为这里 STDOUT …","入口。","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","获取启动栈地址","SUM Access for Supervisor User Memory Access","副核入口。","设置启动页表","设置启动栈","","","","标准输入","","","","","","","","标准输入。","","","","Returns the argument unchanged.","从输入流读取一个字符","从输入流读取一个字符","Calls <code>U::from(self)</code>.","","","","","","标准输出","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","绕过所有锁打印一个字符","输出到 stderr","输出到 stdout","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","sys_open 时的参数，表示在当前目录下","一段左闭右开的地址区间，.0 为左端点， .1 …","指定一个特定的 …","设备映射到内存的最后位置","设备(sdcard)映射到内存的起始位置","如果 elf 的 phdr 指示 base 是 0(如 libc-test 的 …","预设的文件描述符数量限制","编号最小的可用的 cpu_id","…","测试环境下，文件系统镜像是否是由qemu引入","…","…","内核堆的大小","内核栈大小","最后一个 CPU 的编号","文件系统镜像的大小。注意这个量和 fs-init …","运行时有多少内核输出","用于设备 MMIO …","无父进程","…","页表中每页的大小","即 log2(PAGE_SIZE)","表示内存的地址段到此为止","表示内存的地址段由此开始","内核中虚拟地址相对于物理地址的偏移","sys_pipe创建的管道的大小，单位为字节","…","文件系统的根目录，注意斜杠方向","sys_sendfile64 中使用 buffer 的大小","一个在 Sv39 页表里不合法的地址。","…","signal 中用到的 bitset 长度。","socket 使用的 buffer 大小","是否在启动后暂停。如果为 …","测试时的文件系统镜像大小。 …","最小的 tid(进程号) 是 0，最大的 pid 是 …","临时文件的大小限制","初始用户栈大小，用于存放 argc/argv/envs/auxv","…","SIGINFO …","用户栈大小","用户地址最大不能超过这个值","标记是否使用 …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","…","创建文件系统实例","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","读写块设备的规范","读一个块到buf","写一个块","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","这里用 new_contiguous …","Frame 在 Drop …","…","…","","","","","","创建文件系统实例","","","","","","","实际上没有 flush …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","初始化设备。注意设置 pos = start，而不是 …","","","","","","","","","A socket address could not be bound because the address is …","A nonexistent interface was requested or the requested …","An entity already exists, often a file.","The operation failed because a pipe was closed.","The connection was aborted (terminated) by the remote …","The connection was refused by the remote server.","The connection was reset by the remote server.","Sets the offset to the current position plus the specified …","Sets the offset to the size of this object plus the …","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…","A list specifying general categories of I/O error.","This operation was interrupted.","Data not valid for the operation were encountered.","A parameter was incorrect.","The network operation failed because it was not connected …","An entity was not found, often a file.","Any I/O error not part of this list.","The operation lacked the necessary privileges to complete.","The <code>Read</code> trait allows for reading bytes from a source.","A specialized <code>Result</code> type for I/O operations.","The <code>Seek</code> trait provides a cursor which can be moved within …","Enumeration of possible methods to seek within an I/O …","Sets the offset to the provided number of bytes.","The I/O operation’s timeout expired, causing it to be …","An error returned when an operation could not be completed …","The operation needs to block to complete, but the blocking …","A trait for objects which are byte-oriented sinks.","An error returned when an operation could not be completed …","","","","","","","","","","Creates a “by reference” adaptor for this instance of …","Creates a “by reference” adaptor for this instance of …","Transforms this <code>Read</code> instance to an <code>Iterator</code> over its …","Creates an adaptor which will chain this stream with …","","","","","","","","Flush this output stream, ensuring that all intermediately …","","","","","","Converts an <code>ErrorKind</code> into an <code>Error</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the inner error wrapped by this …","","Determines if this <code>Read</code>er can work with buffers of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>Error</code>, returning its inner error (if any).","Returns the corresponding <code>ErrorKind</code> for this error.","Creates a new I/O error from a known kind of error as well …","","Pull some bytes from this source into the specified …","Read the exact number of bytes required to fill <code>buf</code>.","","Seek to an offset, in bytes, in a stream.","Creates an adaptor which will read at most <code>limit</code> bytes …","","","","","","","","","","","","","Write a buffer into this writer, returning how many bytes …","Attempts to write an entire buffer into this writer.","Writes a formatted string into this writer, returning any …","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","内核中报错的类型。 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","和 mmap 段同步，只能通过 read_from_offset 和 …","","Sets the offset to the current position plus the specified …","Sets the offset to the size of this object plus the …","把 FsFile 包装一层以适应 Trait File","文件描述符管理，每个进程应该有一个 …","同时保存文件路径和文件名，作为链接表的 …","文件系统的属性 具体参数定义信息来自 …","…","管道内部的 buffer，是个循环队列","Enumeration of possible methods to seek within an I/O …","","Sets the offset to the provided number of bytes.","同步策略(本来想搞类型体操，但太花了","","","","","","…","","","检查目录是否存在 要求 dir_name 使用 os …","检查文件是否存在。（不考虑link） …","检查是否存在对应目录","…","","","","管道内保存的数据 只有所有持有管道的 Arc …","FAT文件系统设备的抽象 …","所在文件夹的路径","","","对用户来说，还有多少块可用","还剩多少块未分配","总的块数","最优传输块大小","空闲的 inode 数","总的 inode 数","一些选项，但其实也没用到","片大小","…","…","空余 padding","是个 magic number，每个知名的 fs …","描述符和分配器","文件描述符管理 内部保存你所有 FD 的 Arc …","","内部实际文件","","内部包含的文件","","Returns the argument unchanged.","初始化硬盘内容。 由于它需要调用 …","文件系统的属性状态，用于 sys_statfs","获取一个迭代器，每次返回一个目录中的 …","查询这个目录是否是 vfs …","查询这个目录是否是 vfs …","","可变部分","Calls <code>U::from(self)</code>.","标记是否是读的一端","","最大 fd 限制","输出根目录下的所有文件","加载下一个用户程序。","创建目录，返回是否成功","挂载一个fatfs类型的设备","文件名","","在 dir_name 目录下，打开 name 文件。 …","把信息写入 stat 中","","管道实现","","检查文件名对应的链接 如果在 map …","是否可读","移动文件，如果 new_dir == old_dir …","输出测试结果","","暂时的 socket 实现","标准输入输出流的 File 封装","","…","","","…","尝试删除一个硬链接。 …","…","","创建文件时的的 mode 需要屏蔽这些位 如 …","","虚拟文件系统管理 …","是否可写","和 mmap 段同步，只能通过 read_from_offset 和 …","同步策略(本来想搞类型体操，但太花了","","","","","","","","","","","复制一份后端文件，一般是 fork 要求的","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","…","创建时不检查 offset 是否合法","","","后端不可直接读","转移读操作","当区间因为 mmap / munmap …","","","","","","","","不可直接写","转移写操作","","","","","","","","","","","","","","","","","把 origin_dir 目录下的每个文件，链接到 …","","","","","检查目录是否存在 要求 dir_name 使用 os …","检查文件是否存在。（不考虑link） …","","FAT中的目录抽象。 主要是包装实现 Trait File","FAT中的文件抽象。","以文件描述符形式保存一个路径。 主要用于 …","Returns the argument unchanged.","初始化硬盘内容。 由于它需要调用 …","获取一个迭代器，每次返回一个目录中的 …","","打开目录。如果是根目录，特判直接返回 …","Calls <code>U::from(self)</code>.","处理文件系统的链接相关","输出根目录下的所有文件","","分割文件所在路径，然后经过link转换。","创建目录，返回是否成功","","在 dir_name 目录下，打开 name 文件。 …","","在 path 后加入 child_path 路径，返回 child_path …","","删除文件","移动文件，如果 new_dir == old_dir …","","…","整个文件系统的信息","运行比赛测试","","","","","","","","把 FsDir 包装一层以适应 Trait File","","","","目录的路径，相对于根目录","Returns the argument unchanged.","内部结构","Calls <code>U::from(self)</code>.","是否可读","","","","是否可写","把 FsFile 包装一层以适应 Trait File","文件在os中运行时的可变信息","","","最后一次访问时间","","","","","清空文件","最后一次改变(change)属性的时间","所在文件夹的路径","内部实际文件","打开时的选项。 主要用于判断 CLOEXEC，即 …","Returns the argument unchanged.","Returns the argument unchanged.","文件属性","获取文件状态信息","可变部分","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","最后一次改变(modify)内容的时间","文件名","构造一个带权限的 FatFile","读取文件","读取所有数据","是否可读","已准备好读。对于 pipe …","已准备好写。对于 pipe …","切换文件指针位置","设置状态信息的 CLOEXEC …","设置文件状态信息，返回设置是否成功。","","","","","","","是否可写","写入文件","仅保存路径的文件描述符实现","","","","路径本体，占用堆空间保存","Returns the argument unchanged.","获取路径","文件属性","Calls <code>U::from(self)</code>.","初始化一个 FdDir，如果输入的目录没有 ‘/’…","路径本身不可读","可修改 CLOEXEC 信息","","","","路径本身不可写","同时保存文件路径和文件名，作为链接表的 …","","","实际文件(而不是用户文件)到链接数的映射","用户看到的文件到实际文件的映射","已挂载的文件系统(设备)。 …","挂载的文件系统。 目前“挂载“…","添加硬链接","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","获取硬链接数。","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","挂载一个fatfs类型的设备","","","…","","","检查文件名对应的链接 如果在 map …","","…","…","","","","","尝试删除一个硬链接。 …","","","","把信息写入 stat 中","来自busybox …","","","","","","","来自 libc 的动态测例","来自 libc 的静态测例","来自 lua 的测例，每行是一个命令。lua …","初赛测例","","","","","运行测试时的状态机","","","","","","","","","","","","","","","","","","","","","","","","","","","","最终输出测试信息","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","输入测试","加载下一个用户程序。","初始化测试信息","","","输出测试结果","分隔 argv 参数，处理带引号的情况","","","","","","","","","","","","","更新执行结果","文件描述符管理，每个进程应该有一个 …","","","","删除所有带有 CLOEXEC 标记的文件。在 exec …","从另一个 FdManager 复制一份文件描述符表。","复制一个 fd 中的文件到新的 fd 上","复制一个 fd 到指定的新 fd 上，返回是否成功","描述符和分配器","内部包含的文件","Returns the argument unchanged.","拿到一个文件的 Arc 指针(clone 语义)","检查是否 vec 里所有 fd …","获取当前 fd 的上限","获取 umask","Calls <code>U::from(self)</code>.","测试fd是否已经满了","最大 fd 限制","修改当前 fd 的上限","新建 FdManager 并插入 Stdin / Stdout / Stderr","插入一个新文件","删除一个文件，相当于以 take …","获取旧的 umask 并设置新值","","","","创建文件时的的 mode 需要屏蔽这些位 如 …","文件系统的属性 具体参数定义信息来自 …","","","","对用户来说，还有多少块可用","还剩多少块未分配","总的块数","最优传输块大小","空闲的 inode 数","总的 inode 数","一些选项，但其实也没用到","片大小","…","…","空余 padding","是个 magic number，每个知名的 fs …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","…","管道内部的 buffer，是个循环队列","","","","","","","","管道内保存的数据 只有所有持有管道的 Arc …","","Returns the argument unchanged.","Returns the argument unchanged.","获取循环队列目前的存的数据长度","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","是否 buffer 是空的","是否 buffer 已满","是否已经终止。对于 pipe …","标记是否是读的一端","","创建一个 buffer","新建一个管道，返回两端","读尽可能多的内容，注意这个函数不是 trait …","读管道中数据","已准备好读。对于 pipe …","已准备好写。对于 pipe …","","","","","","","","写尽可能多的内容，注意这个函数不是 trait …","写入管道","IPv4 Internet protocols","Local communication","Generic musl socket domain.","","","Set FD_CLOEXEC flag on the new fd","Datagram Congestion Control Protocol socket","Supports datagrams (connectionless, unreliable messages of …","Set O_NONBLOCK flag on the open fd","Obsolete and should not be used in new programs.","Provides raw network protocol access.","Provides a reliable datagram layer that does not guarantee …","Provides a sequenced, reliable, two-way connection-based …","Provides sequenced, reliable, two-way, connection-based …","一个套接字","","Generic musl socket type.","","","","","","","","","","","","","","","","","","","socket 对应的域","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","获取文件状态信息","SocketInner struct to modify socket","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","本地回环网络","","","具体的连接协议","Socket 不适用普通读写","socket的buffer内有值则可读","socket的buffer未满则可写","收取消息，当且仅当这个文件是 socket 时可用","","地址解析。目前只有 ip 地址的解析","发送消息，当且仅当这个文件是 socket 时可用","","","设置fd flags","连接类型","","","","","","","","","","","","","","","","","Socket 不适用普通读写","本地的网络地址，即 127.0.0.1","端口映射","端口上的被发送或等待接收的数据","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","建立新的端口映射","","读数据到 buf 中","","","","","从 buf 写入数据","","","","","ip 地址和端口","","未知","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","错误输出流。目前会和 Stdout …","标准输入流","标准输出流","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","文件属性","文件属性","文件属性","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","目前 Stdin 只支持读一个字符","Stdout 不可读","Stdout 不可读","已准备好读","已准备好读","已准备好读","已准备好写","已准备好写","已准备好写","","","","","","","","","","Stdin 不可写","UTF-8 格式写","UTF-8 格式写","","","属于虚拟文件系统的目录","","","","","","","检查是否存在对应目录","…","","Returns the argument unchanged.","查询这个目录是否是 vfs …","查询这个目录是否是 vfs …","Calls <code>U::from(self)</code>.","空文件，用于 dev/null","…","","","…","…","","…","内存中保存的虚文件，可以有 backend …","另一种空文件，用于 dev/zero","","","","","Returns the argument unchanged.","文件属性","Calls <code>U::from(self)</code>.","null 无法读到任何信息","","","","null 可写，但没有反馈","目录项","…","","","","","","","检查文件是否存在","创建文件，返回是否成功","","","Returns the argument unchanged.","Returns the argument unchanged.","获取路径","检查文件是否存在，如存在则返回一个 Arc …","获取目录名字","文件属性","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","…","","","","创建目录","路径本身不可读","删除一个文件","","","","","","","路径本身不可写","临时文件","实际保存的文件内容","打开时的选项。","","","","","","","清空文件","清空文件","内部存储，保存分配的页帧","Returns the argument unchanged.","Returns the argument unchanged.","读取文件大小","文件属性","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","当前文件指针位置","读取文件","从某个位置读文件内容到 buf …","从某个位置读文件内容到 buf …","内部对读文件的实现","切换文件指针位置","修改文件指针位置","设置位置。其实和 seek …","数据长度","","","","","","","写入文件","内部对写文件的实现","将 buf …","将 buf …","","","","","Returns the argument unchanged.","文件属性","Calls <code>U::from(self)</code>.","从 zero 中只会读到0","","","","zero 可写，但没有反馈","The <code>Read</code> trait allows for reading bytes from a source.","The <code>Seek</code> trait provides a cursor which can be moved within …","A trait for objects which are byte-oriented sinks.","Creates a “by reference” adaptor for this instance of …","Creates a “by reference” adaptor for this instance of …","Transforms this <code>Read</code> instance to an <code>Iterator</code> over its …","Creates an adaptor which will chain this stream with …","Flush this output stream, ensuring that all intermediately …","Determines if this <code>Read</code>er can work with buffers of …","Pull some bytes from this source into the specified …","Read the exact number of bytes required to fill <code>buf</code>.","Seek to an offset, in bytes, in a stream.","Creates an adaptor which will read at most <code>limit</code> bytes …","Write a buffer into this writer, returning how many bytes …","Attempts to write an entire buffer into this writer.","Writes a formatted string into this writer, returning any …","","","","","","","初始化过程中 riscv 下 ELF …","Returns the argument unchanged.","用户程序初始栈信息。 栈的空间排布参考了 …","初始化时用到的栈。 …","解析 elf 文件并初始化一个用户程序，其中 …","Calls <code>U::from(self)</code>.","","执行用户程序并选择解释器：","","","","","","","","","","","","","","初始化信息","args strings","","auxiliary","","","environment strings","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","将初始信息序列化到栈上 …","","","","用户程序初始栈，从高向低伸展","","","","栈底(高地址)","内部保存的已序列化的信息","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","create a stack","向栈中推入一个序列","…","当前栈顶(相对低地址)","","","","","","内存段和相关的页表","页表项各位的定义。目前对应 riscv64 的 Sv39 …","page table structure","页表项本体","…","直接分配的物理地址段","lazy 分配的物理地址段。当 page fault …","保存一个 TID ，当 Drop 时会自动释放","指向用户空间的指针。","指向用户空间的裸指针","一段访问权限相同的虚拟地址","与地址映射相关的函数定义","各种分配器","初始化堆分配器、页帧分配器和 TID …","标记内存段的位置","地址段定义","","","","…","","切换到 KERNEL_MEMORY_SET 中的页表。 …","","地址段结尾，需要对其页","访问权限","","","获取 idx 所在页的页帧。","…","处理来自内核的异常中断 …","是否是用户态的","","","…","页表实现","对应的物理地址段","对应的页表","读从 offset …","释放 idx 地址对应的物理页","","…","…","地址段总长度","…","","地址段开头，需要对其页","同步页的信息到后端文件中","用户地址空间中的指针、数组、数据等","虚拟地址段映射管理","把数据写到从 offset …","","","从地址获取页号","页首地址","下一页页首地址","检查一个结构是否跨页","需要多少页来存放 size Byte 的数据","从页号获取开头地址","地址转页内偏移","物理地址转虚拟地址(仅限内核偏移映射)","虚拟地址所对应的Sv39的三级页表项，即第 …","虚拟地址转物理地址(仅限内核偏移映射)","","","","初始化堆分配器、页帧分配器和 TID …","文件描述符分配器","页帧分配器","堆分配器","TID 分配器 最大支持 4096 …","","","","分配一个确定的 fd。这个函数不检查 fd …","尝试分配 fd，如果成功(即该 fd …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","页帧编号转物理地址","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","物理地址转页帧编号","","","","","","","","","","","","Initialize the global heap alloactor.","","保存一个 TID ，当 Drop 时会自动释放","","分配一个 usize，并打包成 Tid","从 TID 分配器中分配一个 usize","","","","释放一个 usize，它必须已经被分配过","释放这个 tid，它可用于其他进程","","Returns the argument unchanged.","初始化 tid 分配","Calls <code>U::from(self)</code>.","分配一个 tid，如没有可用的 tid，则返回 None","","","","…","","","一段访问权限相同的虚拟地址","","","","…","当前地址段是否包含这个地址","从已有 VmArea 复制一个新的 VmArea …","从已有 VmArea 复制一个新的 VmArea …","地址段结尾，需要对其页","把物理地址段实现为直接分配对应页帧","访问权限","","Returns the argument unchanged.","","","","","获取 idx 所在页的页帧。","从接口参数 args: usize 转换成对页表的引用","处理 page fault","Calls <code>U::from(self)</code>.","当前地址段是否包含这一段地址","这一段是否是用户态可见的","把物理地址段实现为 lazy 分配需要的页帧","…","…","","修改这段区间的访问权限。一般由 mprotect …","…","","新建地址段，成功时返回 VmArea 结构","对应的物理地址段","读从 offset …","释放 idx 地址对应的物理页","","…","…","地址段总长度","…","","地址段开头，需要对其页","同步页的信息到后端文件中","","","","…","删除部分虚拟地址映射","把数据写到从 offset …","直接分配的物理地址段","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","lazy 分配的物理地址段。当 page fault …","","","","","","","对整体区间读写","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","…","用给定页帧生成pma","复制从 offset 位置开始的一段数据到 dst","","","","","","","","","","复制 src ，放到从 offset 位置开始的物理页","","","","","","","","","","","","","","","","","页表项各位的定义。目前对应 riscv64 的 Sv39 …","page table structure","页表项本体","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","申请一个页面，并返回申请到的帧 如果返回 …","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","清空表项","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","获取第一层页表所在的物理页地址","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","查找一个页表项，不申请新页面","查找一个页表项，如为空则新建页面","","","","","","","","直接在对应位置并写入值。 …","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","从表根地址中生成页表","…","获取 PTE，可直接对其修改","获取 paddr 页面上的第 idx 个页表项 因为 “…","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","","Returns <code>true</code> if no flags are currently stored.","","映射一对地址","映射内核段的页表","","","Returns the complement of this set of flags.","","询问一个虚拟地址对应的物理地址","","Removes the specified flags in-place.","","…","Inserts or removes the specified flags depending on the …","设置页号，将地址[55:12…","设置页号与标志位","切换到这个页表","写 satp 寄存器切换页表","设置[7:0]位标志位，并保持物理页号不变","修改一个页表项的权限","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","生成该页表对应的 satp …","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","取消映射","","","","用户地址空间传来的指针转换成数据。","用户地址空间传来的指针，默认是不安全的","指向用户空间的指针。","指向用户空间的裸指针","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","内存段和相关的页表","","","","切换到这个 MemorySet 内的页表","标记内存段的位置","","","","","","","清空用户段的地址映射","清空用户段的地址映射，但保留内核段的","从已有 MemorySet 按照 fork …","","","","","切换到 KERNEL_MEMORY_SET 中的页表。 …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","处理来自内核的异常中断 …","处理这个映射表对应的错误","","","初始化 MemorySet，加载所有内存段","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","是否是用户态的","…","…","…","…","为 ms 映射内存段的地址。ms …","修改一段内存映射的权限","…","取消一段内存地址映射","内核态的映射表","…","用户态的映射表","对应的页表","插入一段内存段，并将其映射到页表里","…","读操作","包装读写操作","","","","","","","","","","","写操作","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SigAction::handler …","SigAction::handler …","和信号处理函数相关的信息定义","没有处理函数时的默认行为。 参见 …","信号处理指定参数，详见 …","错误信息","处理信号的结构，每个线程有一个，根据 …","信号编号。","…","","","所有的处理函数","","","","","","","","清空模块。 …","清空模块。","","","","","","处理时指定的参数","","Returns the argument unchanged.","Returns the argument unchanged.","获取某个信号对应的 SigAction。 因为 signum …","获取某个信号对应的 …","…","获取信号量。这个函数会复制一个 …","所有线程退出时均需要从表中删除","所有线程初始化时均需要加入表","用户定义的处理函数地址","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","信号的掩码","…","新建一个信号模块","新建一个处理模块","信号处理时的栈，也被视为 <code>signal trampoline</code>…","发送一个信号给进程 tid","修改某个信号对应的 SigAction。 因为 signum …","","","","信号处理函数","触发信号时的信息。当 SigAction …","","当前已受到的信号","信号的编号","","一张全局的表，从 tid 映射到对应的 signals …","","","尝试添加一个 bit …","","","","","","","触发信号时的额外用户信息。当 SigAction …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SigAction::handler …","SigAction::handler …","和信号处理函数相关的信息定义","没有处理函数时的默认行为。 参见 …","信号处理指定参数，详见 …","","","","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","处理时指定的参数","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","获取 restorer，如果没有 SA_RESTORER …","用户定义的处理函数地址","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","信号的掩码","Returns the complement of this set of flags.","获取默认行为","","Removes the specified flags in-place.","信号处理时的栈，也被视为 <code>signal trampoline</code>…","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","错误信息","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","信号编号。","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","从 tid 获取信号相关信息","获取信号量。这个函数会复制一个 …","所有线程退出时均需要从表中删除","所有线程初始化时均需要加入表","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","pthread_cancel 会用到","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","检查线程是否在等待某种资源","进入新进程时，清空计数器。 …","系统调用中的选项/类型","与读写、文件相关的系统调用","专门处理 linux 特色的 futex 锁。","检查 syscall 调用中的死循环。 …","与进程相关的系统调用","设置一个线程等待某个事件 …","关于 socket 的 syscall","处理系统调用","系统调用编号","唤醒某个线程，如 waiter 存在，则返回 …","","","可以异步做","","块设备","字符设备","目录","sys_getdents64 中指定的结构体类型","","","","交换原位置和目标位置的文件","","先进先出的文件/队列","复制这个 fd，相当于 sys_dup","复制 fd，然后设置 cloexec 信息，即 exec …","获取 cloexec 信息，即 exec 成功时是否删除该 …","获取 flags 信息","设置 cloexec 信息，即 exec 成功时删除该 fd","设置 flags 信息","sys_fcntl64 使用的选项","","","删除同一文件的其他内存映射 …","","sys_writev / sys_readv 中指定的结构体类型","符号链接","","","不映射到实际文件","","","","取消原来这段位置的映射","","","","…","","","","对这段内存的修改是私有的","","","","对这段内存的修改是共享的","","","指定 mmap 的选项","sys_renameat2 用到的选项","","","…","","","","报告还未结束的用户进程的状态","","","","不挂起当前进程，直接返回","","","","报告已执行结束的用户进程的状态","","常规文件","用户地址空间的最大大小","可以打开的 fd 数","用户栈大小","sys_prlimit64 使用的数组","sys_renameat2 用到的选项","从当前位置","从文件结尾","从文件开头","和当前 mask 取并集","重新设置当前 mask","从当前 mask 中去除对应位","socket","","","…","","","","要求同步，即立即检查","","sys_sysinfo 用到的类型，详见 …","未知类型文件","","sys_uname 中指定的结构体类型","","","报告还未结束的用户进程的状态","","","","替换后在原位置放一个 “whiteout” …","","","","","报告已执行结束的用户进程的状态","","","","不挂起当前进程，直接返回","","指定 sys_wait4 的选项","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","","","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","用于缓存的内存大小，单位为 mem_unit …","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","inode 编号","文件名","文件名字存的位置相对于结构体指针是多少","到下一个 Dirent64 的偏移","当前 Dirent 长度","文件类型","默认 uname。这个结构的内容跟 os …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","域名","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","可用的高地址段的内存大小，单位为 mem_unit …","当前可用内存，单位为 mem_unit Byte(见下)","可用的swap空间大小，单位为 mem_unit Byte(见下)","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","1 / 5 / 15 分钟平均负载","硬件类型","指定 sys_info 的结构中用到的内存值的单位。 …","网络上的主机名称","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","当前进程数，单位为 mem_unit Byte(见下)","发行编号","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","软上限","硬上限","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","设置一个目录项的信息","共享内存大小，单位为 mem_unit Byte(见下)","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","系统名称","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","高地址段的内存大小，单位为 mem_unit …","内存总量，单位为 mem_unit Byte(见下)","…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","启动时间(以秒计)","版本","…","…","","…","关闭文件，成功时返回 0，失败时返回 -1","复制一个 fd 中的文件到一个新 fd …","复制一个 fd 中的文件到指定的新 fd …","设置文件属性。目前支持的比较少","获取文件状态信息","获取文件状态信息，但是给出的是目录 fd …","获取当前工作路径","获取目录项信息","一些规则很混乱的 io 控制","创建硬链接。成功时返回0，失败时返回-1","修改文件指针位置","创建目录，成功时返回 0，失败时返回 -1","…","打开文件，返回对应的 …","创建管道，在 *pipe 记录读管道的 fd，在 *…","在 offset 位置读 count …","从 fd 代表的文件中读一个字串，最长为 …","读取 (dir_fd, path) …","从同一个 fd 中读取一组字符串。 目前这个 …","重命名文件，也可以作为 move 使用。 …","从 in_fd 读取最多 count 个字符，存到 out_fd …","获取文件系统的信息","设置创建文件时 user_mode …","…","…","修改文件的访问时间和/或修改时间。","写一个字串到 fd 代表的文件。这个串放在 …","写入一组字符串到同一个 fd 中。 目前这个 …","","","","","futex 用到的参数定义","","","等待机制，记录线程是否等待在某个事件","…","","对 futex 的操作","传入的选项","唤醒最多 val 个在等待 uaddr …","","检查用户地址 uaddr …","唤醒最多 val 个在等待 uaddr 位置的线程。","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","…","生成选项","选项对应的操作","","","","","","","等待的时 futex","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","查询是否已被唤醒","","输入唤醒时间，如果为 None …","…","","","","唤醒这个waiter","","","从 tid 获取信号相关信息","检查线程是否在等待某种资源","设置一个线程等待某个事件 …","唤醒某个线程，如 waiter 存在，则返回 …","计数器实现","通过计数器退出时的返回值","一个检测死循环的计数器","检查循环次数","","","","","","进入新进程时，清空计数器。 …","当前已触发了多少次","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","当触发到多少次时，直接结束进程","","","","修改用户堆大小，","创建一个子任务，如成功，返回其 tid","将当前进程替换为指定用户程序。","复制当前进程","进程退出，并提供 exit_code 供 wait 等 syscall …","获取有效用户组 …","获取有效用户 …","获取用户组 …","获取当前进程的 pid。 …","获取父进程的 pid。 …","获取当前线程的编号。 …","获取用户 …","向 pid 指定的进程发送信号。 …","映射一段内存","映射一段内存","映射一段内存","取消映射一段内存","修改一些资源的限制","设置 clear_child_tid 属性并返回 tid。 …","改变当前进程的信号处理函数。","改变当前线程屏蔽的信号类型。","…","获取系统的启动时间和内存信息。 …","向 tid 指定的线程发送信号。","获取系统信息","…","…","等待一个子进程执行完成","监听着的SOCK_STREAM类型的socket, 接受连接, …","绑定socket fd到指定地址的IP和Port","socket连接给的远程地址. 如完成TCP的三次握手","设置socket为监听模式","收取消息，消息地址需要解析 dest_addr 获得","发送消息，目的地在 dest_addr 的信息中","创建一个 socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","系统调用编号","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","用于 sys_clone 的选项","…","已执行完成","内核栈，会通过帧分配器申请一段内存 …","","第一个用户程序 …","…","正在被一个核执行","任务调度器，目前采用 Round-Robin 算法 在 …","…","…","任务控制块的可变部分","任务执行状态","进程的时间统计，基于 lmbench …","还未初始化","僵尸进程，已退出，但其资源还在等待回收","","","","","","","","子进程","…","clone 任务时指定的参数。 这些参数使得 linux …","保存/恢复一个用户栈所必要的信息","每个核当前正在运行的任务及上下文信息","","用户程序当前的工作目录","通过 exec …","sys_exit 时输出的值","终止当前用户程序，回到 idle 状态","管理进程的所有文件描述符","从任务队列中拿一个任务，返回其TCB。 …","","Returns the argument unchanged.","获取当前核正在运行的进程的TCB。 …","处理当前线程的信号","处理用户程序的缺页异常","任务的状态信息","Calls <code>U::from(self)</code>.","内核栈 内部保存了 …","…","…","父进程","进程 id。创建任务时实际分配的是 tid …","父进程的 pid。","向任务队列里插入一个任务","return address ( e.g. __restore ) of __switch ASM function","","开始执行用户程序","callee saved registers:  s 0..11","","当退出时是否向父进程发送信号 SIGCHLD。 …","子线程初始化时，存放 tid …","信号量对应的一组处理函数。 …","…","从信号处理中返回。 为了适配 …","保存信息时，处理函数是否设置了 SIGINFO …","kernel stack pointer of app","开始运行时的系统时间","内核态经过时间","暂停当前用户程序，回到 idle 状态","关于切换执行流的汇编 <code>__switch</code>","用户程序的数据及状态信息 一个 …","…","任务执行状态","线程 id","线程 …","任务的运行时间信息","统计进程的用户态和内核态时间","设置下一次触发计时器的区间","从内核态进入用户态时统计时间","当前计时器还剩下多少时间。","计时器类型","从用户态进入内核态时统计时间","…","","","","用户堆的堆顶。 …","…","用户态经过时间","…","","","…","","","","要求在子任务的一个地址写入子任务的 tid","","","","历史遗留的 flag，现在按 linux 要求应忽略","","","","共享文件描述符(fd)表","","","","共享文件系统新信息","","","","子任务使用新的命名空间。目前还未用到","","","",".","","","","指定子任务的 ppid 为当前任务的 …","","","","要求在父任务的一个地址写入子任务的 tid","","","","创建指向子任务的fd，用于 sys_pidfd_open","","","","用于 sys_ptrace","","","","要求设置 tls","","","","共享信号处理函数","","","","子任务共享同一组信号量。用于 sys_semop","","","","作为一个“线程”被创建。具体来说，它同 …","","","","与 sys_ptrace 相关，目前未用到","","","","…","","","","共享地址空间","","用于 sys_clone 的选项","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","…","","","","","","","Returns the argument unchanged.","获取Context中 ra 寄存器的值","初始化一个 TaskContext，其中 ra 为 __restore() …","Calls <code>U::from(self)</code>.","return address ( e.g. __restore ) of __switch ASM function","callee saved registers:  s 0..11","kernel stack pointer of app","","","","","初始化一个 TaskContext，其中所有值为 0","所有 CPU 的上下文信息","每个核当前正在运行的任务及上下文信息。 …","","","","","","","","","","","读取当前 cpu 正在运行的任务","这个核当前正在运行的用户程序","","通过 exec …","终止当前用户程序，回到 idle 状态","Returns the argument unchanged.","Returns the argument unchanged.","获取当前核正在运行的进程的TCB。 …","获取无用户程序状态的内核上下文","处理当前线程的信号","处理用户程序的缺页异常","处理退出的任务： …","…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","创建一个 cpu 相关的信息","开始执行用户程序","从信号处理中返回。 为了适配 …","暂停当前用户程序，回到 idle 状态","拿走当前 cpu 正在运行的任务","从内核态进入用户态时统计时间","从用户态进入内核态时统计时间","","","","","","","内核栈，会通过帧分配器申请一段内存 …","","","","","Returns the argument unchanged.","获取第一个 TrapContext 的地址","获取栈底，也即刚初始化时的栈顶","Calls <code>U::from(self)</code>.","创建内核栈并申请内存","打印栈所占用的内存地址","在空栈里压栈一个 TrapContext。 …","","","","…","","任务调度器，目前采用 Round-Robin 算法 在 …","","","","","","","","","","","从任务队列中拿一个任务，返回其TCB。 …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","新建一个空的调度器","从队列中获取一个任务","添加一个任务到队列中","向任务队列里插入一个任务","","返回队列中元素个数","","","","","","","","Switch to the context of <code>next_task_cx_ptr</code>, saving the …","…","已执行完成","…","正在被一个核执行","…","任务控制块的可变部分","任务执行状态","还未初始化","僵尸进程，已退出，但其资源还在等待回收","","","","","","","","","","子进程","…","","","用户程序当前的工作目录","","从 exec 系统调用修改当前TCB，…","sys_exit 时输出的值","管理进程的所有文件描述符","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","从用户程序名生成 TCB，其中文件名默认为 …","从 clone …","如果当前进程已是运行结束，则获取其 …","获取 pid 的值","获取 ppid 的值","读取任务状态","读取任务上下文","获取 tid 的值，不会转移或释放 Tid 的所有权","获取用户堆顶地址","任务的状态信息","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","…","…","映射一段内存地址到文件或设备。","修改一段内存映射的权限","…","取消一段内存地址映射","父进程","进程 id。创建任务时实际分配的是 tid …","父进程的 pid。","记录信号处理函数是否设置了 SIGINFO","…","当退出时是否向父进程发送信号 SIGCHLD。 …","子线程初始化时，存放 tid …","输入 exit code","修改任务状态","设置 clear_child_tid 属性","…","信号量对应的一组处理函数。 …","…","保存信息时，处理函数是否设置了 SIGINFO …","…","任务执行状态","线程 id","任务的运行时间信息","","…","","","","","","","","","","用户堆的堆顶。 …","…","…","统计进程的所有用户态/内核态运行时间","统计系统实际运行时间","进程的时间统计，基于 lmbench …","sys_settimer / sys_gettimer 中设定的 …","统计用户态运行时间","","","","","","","清空使用的时间，用于","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","…","新线程的时间记为 0","以 TimeVal …","输出微秒形式的时间统计，用于调试","以 TimeVal 字段格式输出计时器信息","以 TimeVal …","开始运行时的系统时间","内核态经过时间","统计时间：(内核态)切换进入当前任务","统计时间：(内核态)切出进入当前任务","线程 …","设置下一次触发计时器的区间","统计时间：从内核进入用户态时调用","当前计时器还剩下多少时间。","计时器类型","统计时间：从用户进入内核态时调用","","","","","","","","…","…","用户态经过时间","","异常/中断上下文","","中断上下文信息","CPU 的编号。在内核时，这个信息存在 tp …","打开时间中断","浮点寄存器","设置寄存器 stvec 指向 __alltraps，它定义在 …","处理来自内核的异常/中断","CSR 寄存器 sepc，表示发生中断的位置","CSR 寄存器 sstatus，含中断的信息","内核和用户Trap的共同入口","处理来自用户程序的异常/中断","普通寄存器。 …","异常/中断上下文","…","…","","","","","","CPU 的编号。在内核时，这个信息存在 tp …","","Returns the argument unchanged.","浮点寄存器","获取 a0 的值","获取 sepc 的值","获取当前 sp 的值","Calls <code>U::from(self)</code>.","空的 TrapContext","CSR 寄存器 sepc，表示发生中断的位置","设置 a0 寄存器。 对于 sys_exec，它是参数 argc","设置 a1 寄存器。 对于 rcore-tutorial 的 …","设置 a2 寄存器。","设置 gp 寄存器 基于 …","设置 ra 寄存器","设置 sepc 寄存器，即返回地址","设置 sp 寄存器","设置 tp 寄存器的值","CSR 寄存器 sstatus，含中断的信息","","","","","普通寄存器。 …","获取一个裸指针指向的字符串长度","从一个裸指针获取一个 &amp;str 类型","从一个裸指针获取一个 String 类型","…"],"i":[0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,0,0,2,2,0,0,0,2,2,2,0,0,2,0,0,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,171,171,171,0,0,0,171,0,171,0,0,0,0,0,0,0,0,0,0,171,171,171,0,0,0,0,14,14,14,14,0,14,14,14,14,14,0,0,0,16,16,16,16,16,0,0,0,16,16,16,16,0,0,0,19,19,19,19,0,19,19,0,19,0,19,0,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,172,172,172,172,172,172,172,0,0,0,32,0,0,0,0,0,0,0,32,0,0,32,0,0,32,32,32,32,32,32,32,32,0,0,31,31,0,0,0,33,33,33,33,33,33,33,33,33,33,0,0,0,0,33,0,0,0,0,0,0,0,25,25,25,25,25,25,0,25,25,25,25,25,25,25,25,25,25,43,43,43,43,43,43,43,38,38,0,0,43,43,43,43,43,43,43,0,0,0,0,38,43,43,43,0,43,45,43,38,45,43,38,45,43,38,41,52,41,41,43,38,43,38,43,43,38,52,45,45,43,38,45,45,45,43,38,45,43,41,45,43,38,45,45,45,43,41,41,45,54,41,43,38,45,45,43,38,45,43,38,45,43,38,52,52,52,0,0,53,27,53,27,53,27,27,53,53,53,27,27,27,27,53,53,27,27,53,27,53,53,27,27,27,53,27,53,27,53,27,27,27,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,55,55,0,0,0,0,0,0,0,0,55,0,64,64,64,0,55,0,55,55,0,0,0,0,55,55,84,85,0,68,84,55,62,62,62,62,62,62,62,62,62,62,62,62,82,0,65,68,73,82,55,55,0,0,0,0,0,84,68,55,85,84,82,0,0,0,0,68,65,0,0,73,0,65,0,68,0,0,84,0,0,55,0,55,55,0,0,0,55,82,0,0,68,0,0,64,64,64,65,64,65,64,65,64,64,65,64,64,65,65,64,65,64,65,65,65,65,65,65,65,64,65,64,65,64,65,64,65,65,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,0,0,0,66,66,66,0,0,66,0,0,0,66,0,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,0,66,0,0,173,173,173,173,173,173,173,173,173,173,173,173,0,0,68,174,174,68,174,68,174,68,174,68,68,174,68,174,68,68,68,68,174,174,68,68,68,68,68,68,68,68,68,68,68,174,68,174,68,174,68,68,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,0,0,0,0,0,0,74,73,74,73,74,73,73,73,73,74,73,73,74,73,0,74,73,74,0,74,73,0,73,73,0,73,0,0,74,73,74,73,0,74,73,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,80,81,0,0,0,0,0,0,0,76,79,80,81,76,79,80,81,76,79,80,81,76,79,80,81,76,76,76,79,80,81,76,79,80,81,76,0,76,76,76,0,0,76,79,80,81,76,79,80,81,76,79,80,81,76,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,84,85,84,85,84,85,84,85,84,84,85,84,84,84,85,84,84,85,85,84,84,85,84,85,85,85,84,84,85,84,85,84,85,84,85,86,86,0,0,0,87,87,87,87,87,87,87,87,87,0,0,0,175,88,176,86,87,88,176,86,87,88,176,86,87,86,87,86,87,88,88,86,87,175,176,86,87,88,176,86,87,88,88,88,176,86,87,176,176,0,88,175,88,88,88,88,88,176,0,88,88,88,88,88,86,87,88,176,86,86,87,87,88,176,86,87,88,176,86,87,88,0,0,0,91,91,91,0,0,91,91,91,91,0,91,0,91,91,91,91,0,0,0,0,92,0,92,175,0,175,92,175,92,175,92,92,92,175,92,175,92,0,175,92,175,92,175,92,175,92,175,92,0,0,0,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,0,0,0,97,0,0,97,97,97,0,0,97,97,0,0,97,0,0,97,97,0,0,97,0,0,0,0,98,98,98,98,98,98,98,98,98,98,98,0,0,99,59,99,59,99,59,59,59,59,99,99,59,59,59,59,59,99,59,59,99,59,99,59,59,59,99,59,99,59,99,59,59,0,0,101,100,101,100,101,100,101,100,101,101,100,101,101,100,100,100,101,100,101,101,100,100,101,101,100,101,101,101,100,101,100,101,100,101,100,101,100,101,0,102,102,102,102,102,102,102,102,102,102,102,0,0,0,41,52,41,41,52,41,41,41,54,41,52,52,52,0,0,104,104,104,104,0,104,0,0,104,104,104,0,104,104,104,0,0,0,0,0,0,0,0,0,0,0,106,106,106,106,106,106,106,106,106,106,106,106,106,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,117,120,109,108,0,0,116,112,112,117,114,108,0,0,105,0,112,0,0,112,105,108,108,114,108,108,108,108,116,112,108,0,0,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,0,0,177,177,177,177,177,0,177,177,177,177,177,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,111,0,111,111,111,0,111,111,111,111,111,0,0,0,0,112,112,112,108,112,112,112,112,0,112,112,112,112,112,112,112,108,0,112,112,112,112,0,112,112,112,112,112,112,112,112,108,108,112,108,108,108,108,112,112,108,112,112,112,112,112,108,0,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,109,178,109,179,109,178,109,179,109,178,109,179,109,178,109,179,0,0,0,109,178,109,179,109,178,109,179,109,178,109,179,109,178,109,179,0,0,120,109,120,120,114,109,109,109,109,109,109,120,109,109,109,120,114,109,120,114,109,120,109,109,109,109,109,114,114,109,120,109,109,120,109,114,114,120,114,109,109,109,109,109,114,114,120,114,109,109,109,109,109,109,114,114,114,0,114,109,109,109,109,120,114,109,109,120,109,120,114,114,120,114,109,109,114,120,109,114,114,109,120,120,114,114,120,114,109,109,109,109,109,114,120,114,109,120,114,109,120,114,109,109,114,120,0,0,0,0,0,0,124,125,124,125,124,125,124,125,124,125,124,125,125,124,125,124,125,124,125,124,124,125,124,125,124,125,0,0,0,126,0,0,105,105,105,126,105,126,105,126,105,105,105,126,105,0,0,0,0,0,105,105,105,126,0,105,0,0,0,105,126,105,105,105,105,105,0,105,105,105,105,0,105,105,105,105,105,105,0,0,0,0,105,126,105,126,105,126,105,131,132,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,0,0,0,0,0,0,0,0,0,132,127,127,128,130,127,128,127,128,127,128,127,128,127,128,134,129,134,127,128,127,127,128,0,0,0,129,127,128,134,129,128,127,128,129,0,127,133,133,133,0,0,134,128,0,134,0,127,128,128,127,128,127,128,127,128,0,132,130,180,130,181,130,180,130,181,130,180,130,181,130,180,130,181,130,180,130,181,130,180,130,181,130,180,130,181,130,180,130,181,0,0,0,0,0,132,0,0,130,132,129,130,130,130,130,130,130,130,130,130,132,129,130,132,129,130,129,130,129,130,130,130,130,130,130,130,130,130,129,129,130,130,130,130,130,132,129,130,130,130,130,130,129,129,130,130,130,130,132,129,130,130,130,129,130,132,130,130,129,130,130,130,130,129,130,130,132,129,130,132,129,130,132,129,130,130,0,133,133,133,133,133,133,133,133,133,133,133,133,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,0,0,0,0,0,0,134,135,136,134,135,136,134,135,136,134,135,136,134,135,136,134,135,136,134,135,134,135,136,136,134,135,136,134,134,136,134,135,136,134,136,136,136,134,135,135,134,134,135,136,134,135,136,134,135,136,134,135,136,0,0,0,0,0,0,0,0,0,0,0,0,0,139,182,139,183,149,149,149,0,0,140,184,140,185,149,146,146,146,146,146,146,0,139,182,139,183,0,149,141,186,141,187,141,186,141,187,141,186,141,187,141,186,141,187,141,186,141,187,0,0,0,140,184,140,185,142,188,142,189,142,188,142,189,142,188,142,189,149,0,0,0,0,0,0,0,0,0,0,0,149,143,190,143,191,139,182,139,183,0,149,0,0,144,192,144,193,140,184,140,185,149,144,192,144,193,144,192,144,193,0,0,0,0,0,0,0,0,0,0,0,0,0,144,142,141,143,140,139,145,148,149,150,156,144,142,141,143,146,147,140,139,150,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,145,148,149,150,156,144,142,141,143,146,147,140,139,145,148,149,150,156,144,142,141,143,146,147,140,139,147,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,148,148,148,148,148,148,145,144,142,141,143,140,139,145,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,144,144,144,144,144,142,142,142,142,142,141,141,141,141,141,143,143,143,143,143,146,147,140,140,140,140,140,139,139,139,139,139,147,147,147,145,148,149,150,156,144,142,141,143,146,147,140,139,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,145,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,145,148,149,150,156,144,142,142,142,141,143,146,147,140,139,144,142,141,143,140,139,144,142,141,143,140,139,150,147,145,147,145,144,142,141,143,140,139,144,142,141,143,140,139,147,145,144,142,141,143,140,139,0,156,156,144,142,141,143,140,139,148,147,144,142,141,143,140,139,144,142,141,143,140,139,144,142,141,143,140,139,145,144,142,141,143,140,139,144,142,141,143,140,139,147,147,147,145,148,149,150,156,144,142,141,143,146,146,147,140,139,145,148,149,150,156,144,142,141,143,146,147,140,139,145,148,149,150,156,144,142,141,143,146,147,140,139,144,142,141,143,140,139,147,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,153,153,153,153,153,152,153,152,153,152,153,152,153,152,152,152,152,153,152,153,152,153,152,0,0,154,154,154,154,154,137,154,154,154,154,154,154,137,154,154,0,0,0,0,0,0,0,0,155,155,155,0,155,0,155,155,155,155,155,155,155,155,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,167,167,0,0,0,167,167,0,0,0,0,0,0,167,167,158,0,0,158,159,158,158,194,194,0,0,0,158,194,0,194,0,61,0,163,158,0,0,0,61,158,0,61,168,194,61,194,0,160,165,0,160,0,61,194,61,61,0,194,160,168,168,0,0,0,194,194,61,168,61,0,168,0,168,168,0,194,158,158,158,194,168,168,61,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,159,195,159,196,0,0,0,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,0,0,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,0,0,0,162,0,0,161,162,161,162,161,162,161,161,162,0,0,161,162,0,161,0,0,0,161,161,162,161,0,0,0,161,0,0,161,162,161,162,161,162,0,163,163,163,163,163,163,163,163,163,163,163,163,163,163,0,0,0,166,0,0,165,166,165,166,165,166,166,0,165,166,165,166,165,165,165,0,165,165,165,166,165,166,165,166,0,0,167,167,167,167,0,0,0,167,167,61,194,167,61,194,167,61,194,167,194,194,167,167,194,167,61,194,61,61,194,167,61,61,61,61,61,61,61,61,61,61,61,194,167,61,61,61,61,61,61,194,61,194,61,61,61,194,61,61,61,61,61,61,194,194,194,61,61,167,194,61,194,167,61,194,167,61,194,167,194,61,169,169,169,0,0,169,168,169,168,169,168,169,168,169,169,168,169,169,168,169,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,169,169,168,169,168,169,168,168,168,0,0,0,0,164,0,164,0,0,164,164,0,0,164,0,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,0,0,0,0],"f":[0,0,[[],1],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],0,[[2,3],[[6,[[5,[4]]]]]],[[]],0,0,[[2,3,3],[[8,[7]]]],[[2,9,3],[[8,[7]]]],0,0,0,[[2,[5,[4]]],[[8,[3,7]]]],[2],[2],0,0,[[2,3,3,3],10],0,0,[[3,3],11],[[3,3],11],0,[2],0,0,[[]],0,0,[[],8],[[],8],[[],12],0,0,0,[[],1],[[]],[[]],[[]],[3],[3,11],[[]],[[],3],[[]],[[],[[13,[3]]]],0,[3,11],[3],[3],[7],[[],11],[[3,3,3]],0,0,[[],8],[[],8],[[],12],[[]],[[]],0,0,[[],1],[[]],[[]],[[]],[[],9],[14,9],[[]],[[],8],[[],8],[[],12],0,0,0,[[],1],[[]],[[]],[[]],[[]],[9],[15],[15],[[],8],[[],8],[[],12],[[16,17],18],0,0,0,[[],1],[[]],[[]],[[19,20],10],[15],[19],[[]],[21,[[8,[22]]]],[[]],[23,9],[[19,24]],[15],[[],8],[[],8],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],12],0,0,0,0,0,0,[[],[[30,[[27,[[26,[25]]]],28,29]]]],0,0,0,0,0,[[],5],[[],[[5,[31]]]],[[],1],0,[[]],[[]],[[]],[32,5],[[]],[[]],[[],8],[[],8],[[],12],0,0,[3],[3],0,0,0,[[],1],[[]],[[]],[[]],[[]],[[],33],[[33,3]],[[],8],[[],8],[[],12],[3,34],[[34,3],35],[34,36],[36,34],[[33,3]],0,0,0,0,[[],[[30,[[27,[[26,[25]]]],28,29]]]],0,0,[[],1],[[]],[[]],0,[25,37],[[]],0,[[]],[[3,3],25],0,[25,[[37,[3]]]],[[25,38],[[37,[7]]]],0,[[],8],[[],8],[[],12],[25,[[37,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,[[40,[39]]]],[[39,41],[[42,[39,41]]]],[43,43],[38,38],[[]],[[]],[[43,43],44],[[43,43],10],[[38,38],10],[[],[[8,[45]]]],[[45,46],[[8,[47]]]],[[45,46],[[8,[47]]]],[[43,46],[[8,[47]]]],[[38,46],[[8,[47]]]],[48,45],[43,45],[[]],[[]],[[]],[45,[[6,[17]]]],[43],[[],49],[[]],[[]],[[]],[45,[[6,[17]]]],[45,43],[[43,17],45],[[43,43],[[6,[44]]]],[[],[[8,[3,45]]]],[[],[[8,[45]]]],0,[38,[[8,[7,45]]]],[[39,7],[[50,[39]]]],[[]],[[]],[[],51],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[],[[8,[3,45]]]],[[],[[8,[45]]]],[15,[[8,[45]]]],0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],[[[27,[52]]],8],[[53,46],18],[[]],[45,53],[[],27],[[]],[11],0,[53,45],[[]],[[]],[[]],[53,10],[[],27],[[],53],[[],53],[[[27,[41]]],[[8,[3]]]],[[[27,[41]]],8],[[[27,[54]],55],[[8,[7]]]],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[[27,[52]]],[[8,[3]]]],[[[27,[52]]],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[]],[[]],[56,56],[[]],[[56,56],10],[[56,46],18],[17,56],[[]],[[]],[[]],[[],8],[[],8],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[51],[[],1],0,[[]],[[]],[17,10],[[17,17],10],[51,[[6,[10]]]],[[51,51],[[6,[10]]]],[55,55],[[]],0,0,0,0,0,[[55,55],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[55,46],[[8,[47]]]],[[]],[[]],0,[17,[[6,[[58,[57,28,29]]]]]],[51,[[6,[[5,[59]]]]]],[[51,51,60],[[6,[[5,[4]]]]]],0,0,[[]],0,0,0,[[]],[[],[[6,[[5,[61]]]]]],[[17,17],10],[[51,17,51],10],0,0,[[17,17,60],[[6,[[5,[4]]]]]],[62],0,0,0,[[17,17],[[6,[51]]]],0,[[17,17,17,17,10],[[8,[63]]]],[35],0,0,0,[[]],[[51,17,51,17],10],[[],8],[[],8],[[59,51],10],[[51,17],10],[[51,51],[[6,[10]]]],[[],12],0,[51,10],0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],[64,64],[65,65],[[]],[[64,64],10],0,[[]],[[]],[[]],[[]],[[65,3]],[[[5,[4]],3,64],65],0,0,[65,[[6,[3]]]],[[65,3],[[6,[3]]]],[[65,3],65],[[]],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[65,[[6,[3]]]],[[65,3],[[6,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],30],[[],[[30,[57,28,29]]]],[[51,51,10,10],10],0,[[],1],[[]],[[]],[17,10],[[17,17],10],[66,30],0,0,0,[[]],[[]],[17,[[6,[[58,[57,28,29]]]]]],0,[[[67,[57,28,29]],17],[[6,[[67,[57,28,29]]]]]],[[]],0,[[]],0,[[17,17],6],[[17,17],10],0,[[17,17,60],[[6,[[5,[4]]]]]],0,[[51,17],3],0,[[17,17]],[[17,17,17,17,10],[[8,[63]]]],0,[[17,17],6],0,0,0,0,[[],8],[[],8],0,[[],12],0,0,[[],1],[[]],[[]],0,[[]],0,[[]],0,[[],8],[[],8],[[],12],0,0,0,[[],1],[[],1],0,[[]],[[]],[[]],[[]],[68],0,0,0,0,[[]],[[]],[[68,69],10],[68,60],0,[[]],[[]],0,0,[[10,10,51,51,[70,[57,28,29]],60],68],[68,[[6,[3]]]],[68,[[71,[9]]]],0,[68,10],[68,10],[[68,55],[[6,[3]]]],[[68,10],10],[[68,60],10],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],0,[68,[[6,[3]]]],0,[[],1],[[]],[[]],0,[[]],[72,[[6,[17]]]],[[72,69],10],[[]],[51,72],[72,[[6,[3]]]],[[72,10],10],[[],8],[[],8],[[],12],[72,[[6,[3]]]],0,0,0,0,0,0,0,[[51,51,51,51]],[[],1],[[],1],[[]],[[]],[[]],[[]],[73,73],[[]],[[73,73],44],0,[[73,73],10],0,[[]],[[]],[[51,17],3],[[]],[[]],0,[[51,17,51],10],[[17,17],74],[[51,51],73],[[]],[[73,73],[[6,[44]]]],0,[[17,17],[[6,[51]]]],[[]],[[51,17,51,17],10],[[51,17,51,17],10],[[],8],[[],8],[[],8],[[],8],[[51,17],10],[[],12],[[],12],[51,10],[62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],75],[[],75],[[],75],[[],[[75,[[71,[51]]]]]],[[],[[75,[76]]]],[[],[[75,[[78,[77]]]]]],[51],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[79,75],[80,75],[81,75],0,[76],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[76,51]],[[],[[6,[[5,[61]]]]]],[[],76],0,0,[35],[[],[[71,[51]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[],12],[[76,35]],0,[[],1],[[]],[[]],[82],[82,82],[[82,3],[[83,[3]]]],[[82,3,3],10],0,0,[[]],[[82,3],[[83,[[5,[4]]]]]],[[82,71],[[6,[[71,[[5,[4]]]]]]]],[82,3],[82,35],[[]],[82,10],0,[[82,3]],[35,82],[[82,[5,[4]]],[[83,[3]]]],[[82,3],[[83,[[5,[4]]]]]],[[82,35],35],[[],8],[[],8],[[],12],0,0,[[],1],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],8],[[],8],[[],12],0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[84,3],0,[[]],[[]],[84,10],[84,10],[85,10],0,0,[3,84],[[]],[84,3],[85,[[6,[3]]]],[85,10],[85,10],0,[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[84,3],[85,[[6,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[86,86],[87,87],[[]],[[]],[88,88],0,[[86,86],10],[[87,87],10],0,0,[[86,46],18],[[87,46],18],[[]],[[]],[[]],[[]],[88,60],0,[[]],[[]],[[]],[[]],0,0,0,[[86,87,3],88],0,0,[88,[[6,[3]]]],[88,10],[88,10],[[88,35,3,89],[[6,[3]]]],0,0,[[88,35,3],[[6,[3]]]],[[88,9,10],[[6,[90]]]],[[88,10]],[[88,60],10],0,[[]],[[]],[[],8],[[],8],[[],8],[3,[[8,[86,3]]]],[3,[[8,[87,3]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[],12],[88,[[6,[3]]]],0,0,0,[[],1],[[]],[[]],[90,[[6,[3]]]],[90,[[6,[3]]]],0,[[]],[[]],[[],91],[3],[91,[[6,[3]]]],[90,[[6,[3]]]],[[],8],[[],8],[[],12],[91,[[6,[3]]]],[90,[[6,[3]]]],0,0,0,0,0,0,0,[90,92],[[],1],[[],1],[[]],[[]],[[]],[[]],[92,92],[[]],0,[[92,46],18],[[]],[[]],[[],90],[[]],[[]],0,[[]],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],0,0,0,[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[93,69],10],[[94,69],10],[[95,69],10],[[]],[[]],[[]],[93,[[6,[3]]]],[94,[[6,[3]]]],[95,[[6,[3]]]],[93,10],[94,10],[95,10],[93,10],[94,10],[95,10],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[93,[[6,[3]]]],[94,[[6,[3]]]],[95,[[6,[3]]]],0,0,0,0,[[],75],[[],[[75,[[96,[51,[5,[59]]]]]]]],[[],1],[[]],[[]],[51,[[6,[10]]]],[[51,51],[[6,[10]]]],[97,75],[[]],[51,[[6,[[5,[59]]]]]],[[51,51,60],[[6,[[5,[4]]]]]],[[]],0,0,[[],8],[[],8],[[59,51],10],[[51,51],[[6,[10]]]],[[],12],0,0,0,0,[[],1],[[]],[[]],[[]],[[98,69],10],[[]],[98,[[6,[3]]]],[[],8],[[],8],[[],12],[98,[[6,[3]]]],0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],[[59,51],10],[[59,51,[5,[4]]],10],0,0,[[]],[[]],[59,[[6,[17]]]],[[5,51,60],[[6,[[5,[4]]]]]],[59,51],[[59,69],10],[[]],[[]],[[59,51],[[6,[[5,[59]]]]]],0,0,[[51,[5,[4]]],99],[51,59],[59,[[6,[3]]]],[[59,51],[[6,[[5,[4]]]]]],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[59,[[6,[3]]]],0,0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],[100],[101],0,[[]],[[]],[101,3],[[100,69],10],0,[[]],[[]],[60,100],[60,101],0,[100,[[6,[3]]]],[[100,3],[[6,[3]]]],[[101,3],[[6,[3]]]],[101,[[6,[3]]]],[[100,55],[[6,[3]]]],[[101,55],[[6,[3]]]],[[101,3]],0,[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[100,[[6,[3]]]],[101,[[6,[3]]]],[[100,3],[[6,[3]]]],[[101,3],[[6,[3]]]],0,[[],1],[[]],[[]],[[]],[[102,69],10],[[]],[102,[[6,[3]]]],[[],8],[[],8],[[],12],[102,[[6,[3]]]],0,0,0,[[]],[[]],[39,[[40,[39]]]],[[39,41],[[42,[39,41]]]],[[],[[8,[45]]]],[[],49],[[],[[8,[3,45]]]],[[],[[8,[45]]]],[38,[[8,[7,45]]]],[[39,7],[[50,[39]]]],[[],[[8,[3,45]]]],[[],[[8,[45]]]],[15,[[8,[45]]]],[103,11],0,[[],1],[[]],[[]],0,0,[[]],0,0,[[104,105,[71,[51]]],83],[[]],[[],[[83,[104]]]],[[17,17,105,[71,[51]]],83],[[],8],[[],8],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,[[]],[[]],0,[[106,46],18],[[]],[[]],[[106,3],107],[[],8],[[],8],[[],12],0,[[],1],[[]],[[]],0,0,[107],[[]],[[]],[3,107],[107],[[107,17],3],0,[[],8],[[],8],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,[[],[[83,[[5,[[75,[108]]]]]]]],[105,83],[[]],0,0,0,0,0,[[3,10],[[83,[[6,[34]]]]]],[[],[[71,[[13,[3]]]]]],[[36,109],83],0,0,0,[[],[[83,[105]]]],0,0,0,[3,[[83,[3]]]],[3,83],0,[3,83],[3,83],[[],3],[[3,3],[[83,[[5,[[75,[108]]]]]]]],0,0,[3],0,0,[3,[[83,[3]]]],0,0,[3,3],[3,3],[3,3],[3,10],[3,3],[3,3],[3,3],[34,36],[36],[36,34],0,0,0,[[]],0,0,0,0,0,0,[110,[[6,[3]]]],[[110,3]],[[110,3],10],[[],1],[[]],[[]],[[110,3]],[[110,3,3]],[[]],[[]],[[110,3],10],[3,110],[[110,3,3]],[[],8],[[],8],[[],12],0,0,[[],1],[[]],[[]],[3,3],[[]],[[]],[[]],[3,3],[[],8],[[],8],[[],12],0,0,0,0,[[3,3],9],[[3,3],9],[[9,3,3]],[[9,3,3,3],9],[[]],0,0,0,[[],[[6,[111]]]],[[],[[6,[3]]]],[[],1],[[]],[[]],[3],[111],[[111,46],18],[[]],[[]],[[]],[[],[[6,[111]]]],[[],8],[[],8],[[],12],0,0,0,0,[[],1],[[]],[[]],[[],[[83,[[5,[[75,[108]]]]]]]],[[112,36],10],[112,[[83,[112]]]],[112,[[83,[112]]]],0,0,0,[[112,46],18],[[]],[[36,3,109,17],[[83,[112]]]],[[36,36,3,109,17],[[83,[112]]]],[[36,36,3,109,17],[[83,[112]]]],[[36,36,109,17],[[83,[112]]]],[[3,10],[[83,[[6,[34]]]]]],[113,114],[[112,3,109,114],83],[[]],[[112,36,36],10],[112,10],0,[[112,3,114],83],[[112,114],83],[[112,115,113]],[[112,114],83],[[112,36,36]],0,[[36,36,109,[5,[[75,[108]]]],17],[[83,[112]]]],0,[3,[[83,[3]]]],[3,83],[[112,113]],[3,83],[3,83],[[],3],[[3,3],[[83,[[5,[[75,[108]]]]]]]],[[112,3,113],112],0,[3],[[],8],[[],8],[[],12],[[112,114],83],[[112,114,36,36],83],[3,[[83,[3]]]],0,[[],1],[[]],[[]],[116,[[83,[[5,[[75,[108]]]]]]]],0,[[116,46],18],[[]],[[116,3,10],[[83,[[6,[34]]]]]],[[]],[[34,34],[[83,[116]]]],[[116,3],[[83,[3]]]],[[116,3],83],[[116,3],83],[[116,3],83],[116,3],[[116,3,3],[[83,[[5,[[75,[108]]]]]]]],0,[[116,3]],[[],8],[[],8],[[],12],[[116,3],[[83,[3]]]],0,[[],1],0,[[]],[[]],[117,[[83,[[5,[[75,[108]]]]]]]],[[117,46],18],[[117,3,3,118],[[83,[3]]]],0,[[]],[[117,3,10],[[83,[[6,[34]]]]]],[[]],[[3,[6,[65]]],[[83,[117]]]],[[[71,[[6,[119]]]],[6,[65]]],117],[[117,3],[[83,[3]]]],[[117,3],83],[[117,3],83],[[117,3],83],[117,3],[[117,3,3],[[83,[[5,[[75,[108]]]]]]]],[[117,3]],[[],8],[[],8],[[],12],[[117,3],[[83,[3]]]],[109,10],[[],10],0,0,[109,10],[[],10],0,0,[109,10],[[],10],0,0,[109,10],[[],10],0,0,0,0,0,[109,10],[[],10],0,0,[109,10],[[],10],0,0,[109,10],[[],10],0,0,[109,10],[[],10],0,0,0,0,[120,34],[[],109],[120,[[6,[119]]]],[[],1],[[],1],[[],1],[[109,109],109],[[109,109]],[[109,109],109],[[109,109]],[109,9],0,0,[[109,109],109],[[109,109]],[[]],[[]],[[]],[[]],[[]],[[]],[120],[109,109],[[]],[[109,109],44],[109,109],[[109,109],10],[[],114],[[],34],[[109,109],109],[[],120],[[],109],[[109,109],10],[120,10],[[109,121]],[[114,36],[[6,[120]]]],[[114,36],[[6,[120]]]],[120,109],[[114,[6,[36]]]],[[109,46],18],[[109,46],18],[[109,46],18],[[109,46],18],[[109,46],18],[[114,36],10],0,[[]],[[]],[122,109],[[]],[9,[[6,[109]]]],[9,109],[9,109],[121,109],[34,114],[[114,120],[[6,[34]]]],[[114,36],[[6,[120]]]],[[34,3],120],[114,34],[109],[[109,109]],[[109,109],109],[[109,109],10],[[]],[[]],[[]],[109,10],[120,10],[109,10],[120,10],[[114,36,34,109],83],[[114,114]],[[34,109],120],[[],[[83,[114]]]],[109,109],[[109,109],[[6,[44]]]],[[114,36],[[6,[34]]]],[120,10],[[109,109]],0,[114,3],[[109,109,10]],[[120,34]],[[120,34,109]],[114],[34],[[120,109]],[[114,36,109],83],[[109,109],109],[[109,109]],[[109,109],109],[[]],[[109,109]],[114,3],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[109,109],109],[[114,36],83],[120,10],0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],[[[124,[123]]],[[124,[123]]]],[[[125,[123]]],[[125,[123]]]],[[]],[[]],[[]],[[]],[3,125],[[]],[[]],[124],[125],[[]],[[]],[[],8],[[],[[8,[124]]]],[[],8],[[],8],[[],8],[[],12],[[],12],0,0,0,0,[[],75],[[],[[75,[105]]]],[105],0,[[],1],[[],1],[[]],[[]],[[]],[[]],[105],[105],[105,[[83,[105]]]],[126,75],[105],0,0,[[]],0,0,[105],[[105,46],18],[[]],[[]],[[36,109],83],[[105,36,109],83],0,0,[105,83],[[]],[[]],0,[[105,36],83],[[105,36,36],83],[105,83],[[105,9,3],83],[105],[[105,36,36,109],10],[[105,36,36],83],[[105,36,36],10],[[],105],[[],[[83,[105]]]],[[],105],0,[[105,112],83],[[105,36,36,109,[6,[65]],10],[[83,[3]]]],[[105,36,3,109],83],[[105,36,3,109,118],83],0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[105,36,3,109],83],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],0,[[]],[[]],[[]],[[]],[127],[128],[127,127],[128,128],[[]],[[]],0,0,0,[[]],[[]],[[127,3,129]],[[127,3],[[6,[129]]]],[128,[[6,[3]]]],[3,[[6,[[5,[[75,[128]]]]]]]],[3],[[3,[5,[[75,[128]]]]]],0,[[]],[[]],0,0,0,[[],127],[[],128],0,[[3,3]],[[127,3,129]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[128,3]],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],0,0,[130,10],[[],10],0,0,[130,10],[[],10],0,0,[130,10],[[],10],0,0,[130,10],[[],10],0,0,[130,10],[[],10],0,0,[130,10],[[],10],0,0,[130,10],[[],10],0,0,[130,10],[[],10],0,0,0,0,0,0,0,0,0,0,[[],130],[[],1],[[],1],[[],1],[[130,130],130],[[130,130]],[[130,130],130],[[130,130]],[130,3],0,[[130,130],130],[[130,130]],[[]],[[]],[[]],[[]],[[]],[[]],[129,129],[130,130],[[]],[[]],[[130,130],44],[130,130],[[130,130],10],[[],130],[[130,130],130],[[],130],[[130,130],10],[[130,121]],0,[[129,46],18],[[130,46],18],[[130,46],18],[[130,46],18],[[130,46],18],[[130,46],18],[[]],[[]],[[]],[3,[[6,[130]]]],[3,130],[3,130],[121,130],[129,3],0,[130],[[130,130]],[[130,130],130],[[130,130],10],[[]],[[]],[[]],[130,10],[130,10],0,[130,130],[131,132],[[130,130],[[6,[44]]]],[[130,130]],0,[[130,130,10]],[[130,130],130],[[130,130]],[[130,130],130],[[]],[[]],[[130,130]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[130,130],130],0,[[],1],[[]],[[]],[[],133],[[]],[[]],0,0,0,[[],8],[[],8],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[]],[[]],[131,131],[[]],[[131,131],10],[[131,46],18],[3,131],[[]],[[]],[[]],[[],8],[9,[[8,[131,9]]]],[[],8],[[],12],0,[3,[[6,[[5,[[75,[128]]]]]]]],[3],[[3,[5,[[75,[128]]]]]],0,0,0,[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[134,134],[135,135],[136,136],[[]],[[]],[[]],0,[[],135],[[],136],0,0,[[134,46],18],[[135,46],18],[[136,46],18],0,[[]],[[]],[[]],[134,3],[[7,3],134],[3,136],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],0,[3,10],[[]],0,0,0,0,0,[[3,[78,[137]]]],0,[3,138],0,[3,10],[139,10],[[],10],0,0,0,0,0,0,0,[140,10],[[],10],0,0,0,0,0,0,0,0,0,0,[139,10],[[],10],0,0,0,0,[141,10],[[],10],0,0,[141,10],[[],10],0,0,[141,10],[[],10],0,0,[141,10],[[],10],0,0,[141,10],[[],10],0,0,0,0,0,[140,10],[[],10],0,0,[142,10],[[],10],0,0,[142,10],[[],10],0,0,[142,10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[143,10],[[],10],0,0,[139,10],[[],10],0,0,0,0,0,0,[144,10],[[],10],0,0,[140,10],[[],10],0,0,0,[144,10],[[],10],0,0,[144,10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],144],[[],142],[[],141],[[],143],[[],140],[[],139],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[144,144],144],[[142,142],142],[[141,141],141],[[143,143],143],[[140,140],140],[[139,139],139],[[144,144]],[[142,142]],[[141,141]],[[143,143]],[[140,140]],[[139,139]],[[144,144],144],[[142,142],142],[[141,141],141],[[143,143],143],[[140,140],140],[[139,139],139],[[144,144]],[[142,142]],[[141,141]],[[143,143]],[[140,140]],[[139,139]],[144,89],[142,89],[141,89],[143,89],[140,89],[139,89],0,0,0,0,0,0,[[144,144],144],[[142,142],142],[[141,141],141],[[143,143],143],[[140,140],140],[[139,139],139],[[144,144]],[[142,142]],[[141,141]],[[143,143]],[[140,140]],[[139,139]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[144,144],[142,142],[141,141],[143,143],[140,140],[139,139],[[]],[[]],[[]],[[]],[[]],[[]],[[144,144],44],[[142,142],44],[[141,141],44],[[143,143],44],[[140,140],44],[[139,139],44],[144,144],[142,142],[141,141],[143,143],[140,140],[139,139],[[144,144],10],[[142,142],10],[[141,141],10],[[143,143],10],[[140,140],10],[[139,139],10],0,0,[[],3],0,0,0,[[],145],[[144,144],144],[[142,142],142],[[141,141],141],[[143,143],143],[[140,140],140],[[139,139],139],0,[[],144],[[],142],[[],141],[[],143],[[],140],[[],139],[[144,144],10],[[142,142],10],[[141,141],10],[[143,143],10],[[140,140],10],[[139,139],10],[[144,121]],[[142,121]],[[141,121]],[[143,121]],[[140,121]],[[139,121]],[[144,46],18],[[144,46],18],[[144,46],18],[[144,46],18],[[144,46],18],[[142,46],18],[[142,46],18],[[142,46],18],[[142,46],18],[[142,46],18],[[141,46],18],[[141,46],18],[[141,46],18],[[141,46],18],[[141,46],18],[[143,46],18],[[143,46],18],[[143,46],18],[[143,46],18],[[143,46],18],[[146,46],18],[[147,46],18],[[140,46],18],[[140,46],18],[[140,46],18],[[140,46],18],[[140,46],18],[[139,46],18],[[139,46],18],[[139,46],18],[[139,46],18],[[139,46],18],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,[[6,[144]]]],[89,[[6,[142]]]],[89,[[6,[141]]]],[89,[[6,[143]]]],[89,[[6,[140]]]],[89,[[6,[139]]]],[89,144],[89,142],[89,141],[89,143],[89,140],[89,139],[89,144],[89,142],[89,141],[89,143],[89,140],[89,139],[121,144],[121,142],[121,141],[121,143],[121,140],[121,139],[17],[144],[142],[141],[143],[140],[139],[[144,144]],[[142,142]],[[141,141]],[[143,143]],[[140,140]],[[139,139]],[[144,144],144],[[142,142],142],[[141,141],141],[[143,143],143],[[140,140],140],[[139,139],139],[[144,144],10],[[142,142],10],[[141,141],10],[[143,143],10],[[140,140],10],[[139,139],10],[[]],[[]],[[]],[[]],[[]],[[]],[142,109],[[]],[142,64],[[]],[[]],[[]],[[]],[[]],[[]],[144,10],[142,10],[141,10],[143,10],[140,10],[139,10],[144,10],[142,10],[141,10],[143,10],[140,10],[139,10],0,0,0,0,0,[144,144],[142,142],[141,141],[143,143],[140,140],[139,139],[[144,144],[[6,[44]]]],[[142,142],[[6,[44]]]],[[141,141],[[6,[44]]]],[[143,143],[[6,[44]]]],[[140,140],[[6,[44]]]],[[139,139],[[6,[44]]]],0,0,[[144,144]],[[142,142]],[[141,141]],[[143,143]],[[140,140]],[[139,139]],[3],0,0,[[144,144,10]],[[142,142,10]],[[141,141,10]],[[143,143,10]],[[140,140,10]],[[139,139,10]],[[148,3,3,149]],0,[[144,144],144],[[142,142],142],[[141,141],141],[[143,143],143],[[140,140],140],[[139,139],139],[[144,144]],[[142,142]],[[141,141]],[[143,143]],[[140,140]],[[139,139]],[[144,144],144],[[142,142],142],[[141,141],141],[[143,143],143],[[140,140],140],[[139,139],139],0,[[]],[[]],[[]],[[]],[[]],[[]],[[144,144]],[[142,142]],[[141,141]],[[143,143]],[[140,140]],[[139,139]],0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[3,[[8,[146,3]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[144,144],144],[[142,142],142],[[141,141],141],[[143,143],143],[[140,140],140],[[139,139],139],0,0,[[5,35],[[6,[51]]]],[[5,35,9],6],[[35,9,3],[[8,[3,63]]]],[9,[[8,[3,63]]]],[3,[[8,[3,63]]]],[3,[[8,[3,63]]]],[[3,3],[[8,[3,63]]]],[[3,3,3],[[8,[3,63]]]],[[3,69],[[8,[3,63]]]],[[35,9,69],[[8,[3,63]]]],[[9,3],[[8,[3,63]]]],[[3,9,3],[[8,[3,63]]]],[[3,3,3],[[8,[3,63]]]],[[35,9,35,9,89],[[8,[3,63]]]],[[3,138,138],[[8,[3,63]]]],[[35,9,89],[[8,[3,63]]]],[[9,9,9,89,9],[[8,[3,63]]]],[[35,9,89,35],[[8,[3,63]]]],[89,[[8,[3,63]]]],[[3,9,3,3],[[8,[3,63]]]],[[3,9,3],[[8,[3,63]]]],[[35,9,9,3],[[8,[3,63]]]],[[3,150,3],[[8,[3,63]]]],[[35,9,35,9,140],[[8,[3,63]]]],[[3,3,3,3],[[8,[3,63]]]],[[9,62],[[8,[3,63]]]],[35,[[8,[3,63]]]],[[9,89],[[8,[3,63]]]],[[35,9,89],[[8,[3,63]]]],[[35,9,151,143],[[8,[3,63]]]],[[3,9,3],[[8,[3,63]]]],[[3,150,3],[[8,[3,63]]]],0,0,0,0,0,0,[[3,35,89,3,3,89],[[8,[3,63]]]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[152,10],[35,152],[152,153],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],0,0,[[],1],[[]],[[]],[[]],[[]],[[],10],[154,10],[[[6,[3]]],154],0,[[],8],[[],8],[[],12],[[]],[154],0,0,[3,10],[[3,[78,[137]]]],[3,10],0,0,0,0,[[],1],[[]],[[]],[3],[155],[[]],0,[155,10],[[]],[[]],0,[[],8],[[],8],[[],12],[3,[[8,[3,63]]]],[[3,138,3,3,3],[[8,[3,63]]]],[[9,3],[[8,[3,63]]]],[[9,3,3],[[8,[3,63]]]],[35,11],[[],[[8,[3,63]]]],[[],[[8,[3,63]]]],[[],[[8,[3,63]]]],[[],[[8,[3,63]]]],[[],[[8,[3,63]]]],[[],[[8,[3,63]]]],[[],[[8,[3,63]]]],[[138,138],[[8,[3,63]]]],[[3,3,142,141,35,3],[[8,[3,63]]]],[[3,3,142],[[8,[3,63]]]],[[3,3,139],[[8,[3,63]]]],[[3,3],[[8,[3,63]]]],[[3,35,156,156],[[8,[3,63]]]],[3,[[8,[3,63]]]],[[3,129,129],[[8,[3,63]]]],[[35,3,3,3],[[8,[3,63]]]],[[],[[8,[3,63]]]],[147,[[8,[3,63]]]],[[138,138],[[8,[3,63]]]],[145,[[8,[3,63]]]],[[138,35,144],[[8,[3,63]]]],[[],[[8,[3,63]]]],[[138,35],138],[[3,9,89,35],[[8,[3,63]]]],[[3,9,3],[[8,[3,63]]]],[[3,9,3],[[8,[3,63]]]],[[3,3],[[8,[3,63]]]],[[3,9,3,35,9,89],[[8,[3,63]]]],[[3,9,3,35,9,3],[[8,[3,63]]]],[[3,3,3],[[8,[3,63]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[]],[[]],[157,157],[[]],[[157,157],10],[[157,46],18],[[]],[[]],[[]],[3,[[8,[157,3]]]],[[],8],[[],8],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],[[5,[61]]]],[[],1],0,[[]],[[]],0,0,0,0,0,[158,5],0,[[]],0,[35],0,[[],[[6,[[5,[61]]]]]],0,[[]],[[],[[6,[[5,[61]]]]]],[[]],[[36,109],83],0,[[]],0,0,0,0,0,0,[[[5,[61]]]],0,0,[[],11],0,0,0,0,0,0,[[],138],0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,[[]],0,0,[[]],0,[[],8],[[],8],[[],12],0,0,0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,[159,10],[[],10],0,0,0,0,0,[[],159],[[],1],[[159,159],159],[[159,159]],[[159,159],159],[[159,159]],[159,89],0,[[159,159],159],[[159,159]],[[]],[[]],[159,159],[[]],[[159,159],44],[159,159],[[159,159],10],[[159,159],159],[[],159],[[159,159],10],[[159,121]],[[159,46],18],[[159,46],18],[[159,46],18],[[159,46],18],[[159,46],18],[[]],[89,[[6,[159]]]],[89,159],[89,159],[121,159],[159],[[159,159]],[[159,159],159],[[159,159],10],[[]],[159,10],[159,10],[159,159],[[159,159],[[6,[44]]]],[[159,159]],[[159,159,10]],[[159,159],159],[[159,159]],[[159,159],159],[[]],[[159,159]],[[],8],[[],8],[[],12],[[159,159],159],0,0,[[],1],[[]],[[]],[160,160],[[]],[[]],[160,3],[3,160],[[]],0,0,0,[[]],[[],8],[[],8],[[],12],[[],160],0,0,0,0,[[],71],[[],[[71,[[75,[161]]]]]],[[],1],[[],1],[[]],[[]],[[]],[[]],[161,[[6,[[5,[61]]]]]],0,[162,71],[[]],[35],[[]],[[]],[[],[[6,[[5,[61]]]]]],[161,160],[[]],[[36,109],83],[[161,[5,[61]]]],0,[[]],[[]],[[],161],[[],11],[[],138],[[]],[161,[[6,[[5,[61]]]]]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],0,[[],1],[[]],[[]],0,[[]],[163,164],[163,3],[[]],[[],[[83,[163]]]],[163],[[163,164],3],[[],8],[[],8],[[],12],0,0,0,0,[[],75],[[],[[75,[165]]]],[[],1],[[],1],[[]],[[]],[[]],[[]],[166,75],[[],[[6,[[5,[61]]]]]],[[]],[[]],[[]],[[]],[[],165],[165,[[6,[[5,[61]]]]]],[[165,[5,[61]]]],[[[5,[61]]]],0,[165,3],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[167,167],[[]],0,[[167,167],10],[[61,17,[71,[51]]],10],0,0,[[]],[[]],[[]],[[17,3,[71,[51]]],[[6,[61]]]],[[5,[6,[3]],10,159,3,3,3],[[5,[61]]]],[61,[[6,[35]]]],[61,3],[61,3],[61,167],[61,160],[61,3],[61,3],0,[[]],[[]],[[]],0,[61,10],[[61,36,36,109,[6,[65]],10],[[6,[3]]]],[[61,36,36,109],10],[[61,36,36],10],[[61,36,36],10],0,0,0,[[61,10]],[61,10],0,0,[[61,35]],[[61,167]],[[61,3]],[[61,3],3],0,0,0,0,0,0,0,[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],[[]],[168],[[169,169],10],[[169,46],18],[[]],[[]],[3,169],[[]],[[]],0,[3,168],[[168,170,170]],[168],[168],[[168,3,3,3],10],0,0,[168],[168],0,0,[168],0,0,[168],[[],8],[[],8],[35,[[8,[169,35]]]],[[],8],[[],8],[[],12],[[],12],[[168,3],10],0,0,0,0,0,0,0,[[]],0,[[]],[164,164],0,0,[164,164],[164,164],0,0,[[3,3,3,3],164],[[3,3],164],[[],1],[[]],[[]],[164,164],[[]],0,[[164,46],18],[[]],0,[164,3],[164,3],[164,3],[[]],[[],164],0,[[164,3]],[[164,3]],[[164,3]],[[164,3]],[[164,3]],[[164,3]],[[164,3]],[[164,3]],0,[[]],[[],8],[[],8],[[],12],0,[9,3],[9,17],[9,51],[3,[[71,[51]]]]],"p":[[8,"Any"],[3,"TaskTrampoline"],[15,"usize"],[8,"File"],[3,"Arc"],[4,"Option"],[15,"u64"],[4,"Result"],[15,"u8"],[15,"bool"],[15,"never"],[3,"TypeId"],[3,"Range"],[3,"Stdin"],[3,"Arguments"],[3,"Stdout"],[15,"str"],[6,"Result"],[3,"SimpleLogger"],[3,"Metadata"],[6,"LogLevel"],[3,"SetLoggerError"],[4,"Level"],[3,"Record"],[3,"MemoryMappedDevice"],[3,"BufStream"],[3,"IoWrapper"],[6,"DefaultTimeProvider"],[3,"LossyOemCpConverter"],[3,"FileSystem"],[8,"BlockDevice"],[3,"BLOCK_DEVICE"],[3,"VirtIOBlock"],[6,"PhysAddr"],[15,"i32"],[6,"VirtAddr"],[6,"Result"],[4,"SeekFrom"],[8,"Sized"],[3,"Bytes"],[8,"Read"],[3,"Chain"],[4,"ErrorKind"],[4,"Ordering"],[3,"Error"],[3,"Formatter"],[3,"Error"],[3,"IntoInnerError"],[3,"Initializer"],[3,"Take"],[3,"String"],[8,"Write"],[3,"TransferError"],[8,"Seek"],[4,"SeekFrom"],[4,"OSError"],[6,"MemoryMappedFsIoType"],[3,"DirIter"],[3,"VirtDir"],[3,"OpenFlags"],[3,"TaskControlBlock"],[3,"FsStat"],[4,"ErrorNo"],[4,"SyncPolicy"],[3,"BackEndFile"],[3,"MEMORY_FS"],[3,"Dir"],[3,"FatFile"],[3,"Kstat"],[3,"File"],[3,"Vec"],[3,"FdDir"],[3,"FileDisc"],[3,"MountedFs"],[3,"TicketMutex"],[3,"TestStatus"],[8,"Iterator"],[3,"Box"],[3,"TESTCASES_ITER"],[3,"TEST_STATUS"],[3,"SYS_INFO"],[3,"FdManager"],[6,"OSResult"],[3,"RingBuffer"],[3,"Pipe"],[4,"Domain"],[4,"SocketType"],[3,"Socket"],[15,"u32"],[15,"u16"],[3,"PortData"],[4,"AddrType"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[3,"BTreeMap"],[3,"VFS_DIRS"],[3,"NullFile"],[3,"DirEntry"],[3,"VirtFile"],[3,"VirtFileInner"],[3,"ZeroFile"],[3,"PanicInfo"],[3,"ElfLoader"],[3,"MemorySet"],[3,"InitInfo"],[3,"InitStack"],[8,"PmArea"],[3,"PTEFlags"],[3,"FdAllocator"],[3,"Tid"],[3,"VmArea"],[6,"ArgsType"],[3,"PageTable"],[6,"IdentType"],[3,"PmAreaFixed"],[3,"PmAreaLazy"],[8,"FnMut"],[6,"Frame"],[3,"PageTableEntry"],[8,"IntoIterator"],[3,"Flags"],[8,"Clone"],[3,"UserPtr"],[3,"UserPtrUnchecked"],[3,"KERNEL_MEMORY_SET"],[3,"SignalHandlers"],[3,"SignalReceivers"],[3,"SigAction"],[3,"SigActionFlags"],[4,"SignalNo"],[4,"SigActionDefault"],[3,"SigInfo"],[3,"SignalUserContext"],[3,"SignalStack"],[3,"MachineContext"],[8,"Waiter"],[15,"isize"],[3,"MSyncFlags"],[3,"RenameFlags"],[3,"MMAPFlags"],[3,"MMAPPROT"],[3,"UtimensatFlags"],[3,"WaitFlags"],[3,"UtsName"],[4,"Fcntl64Cmd"],[3,"SysInfo"],[3,"Dirent64"],[4,"Dirent64Type"],[3,"IoVec"],[3,"TimeSpec"],[3,"FutexFlag"],[4,"Flags"],[3,"FutexWaiter"],[3,"LoopCounter"],[3,"RLimit"],[4,"SyscallNo"],[3,"ORIGIN_USER_PROC"],[3,"CloneFlags"],[3,"TaskContext"],[3,"CpuLocal"],[3,"CPU_CONTEXTS"],[3,"KernelStack"],[3,"TrapContext"],[3,"Scheduler"],[3,"GLOBAL_TASK_SCHEDULER"],[4,"TaskStatus"],[3,"TimeStat"],[4,"TimerType"],[3,"TimeVal"],[3,"KernelStack"],[3,"AddrArea"],[3,"FatDir"],[3,"FatFileInnner"],[3,"IpAddr"],[3,"SocketInner"],[3,"PageFrameConfig"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[8,"__BitFlags"],[3,"TaskControlBlockInner"],[8,"__BitFlags"],[8,"__BitFlags"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
